[
    {
        "title": "About",
        "uri": "About",
        "content": "2012          2015                               B                       swampman foxmail com                    Hugo           b up CodeSheep                                           RSS                                                                                4 0     CC BY NC 4 0                            yyqx online                                                                                                                                                                                                                                                  https   yyqx online  Blog                                                      URL  about    playhouse html",
        "objectID": "About",
        "date": "2019-06-17T10:11:42.000Z",
        "menu": "main"
    },
    {
        "title": "2020年4月4日举国哀悼",
        "uri": "posts/2020年4月4日举国哀悼",
        "content": "Fight ONE",
        "objectID": "posts/2020年4月4日举国哀悼",
        "date": "2020-04-04T09:31:28.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "抗击新冠肺炎"
        ],
        "author": "草祭"
    },
    {
        "title": "并查集",
        "uri": "posts/并查集",
        "content": "NOIP 2015                                                                                                                     A       B        A B                                                                        Step 0                                                                              a b   a               b                      index 0        index   1   2   3   4   5                                                    1   2   3   4   5     b   2   4   2   3   1                       for     Step 1    1     1    1     2  b 1   2                 1 2                                                                                   1         b 1    2   2       a 2    2      2                     1         2   1   1          1    2                       1      a 1    2    index   1   2   3   4   5                                                     2   2   3   4   5     b   2   4   2   3   1   Step 2    2     2    2     4  b 2   4                 index   1   2   3   4   5                                                     2   4  3   4   5     b   2   4   2   3   1   Step 3    3   index   1   2   3   4   5                                                     2   4   2  4   5     b   2   4   2   3   1   Step 4    4   index   1   2   3   4   5                                                     2   4   2   4   5     b   2   4   2   3   1                                 4         b 4    3   3       a 3    2   2       a 2    4   4       a 4    4      4                   4         4   4    4           4    4                               a 4  Step 5    5   index   1   2   3   4   5                                                     2   4   2   4   1     b   2   4   2   3   1      P2661            C  include  include using namespace std  const int N   200010  int n  fa N   ans   0x3f3f3f3f  int  int x  int  cnt      cnt       cnt      fa x     x  return x  else return get fa x   cnt     int main      scanf   d    n    int   1  Graph Editor https   csacademy com app graph_editor                   P2661         https   www luogu org problemnew solution P2661        C           P2661       https   duoluoluo blog luogu org solution p2661        C",
        "objectID": "posts/并查集",
        "date": "2019-09-05T13:12:31.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法"
        ]
    },
    {
        "title": "Hugo博客侧边导航栏",
        "uri": "posts/博客侧边导航栏",
        "content": "TOC       Table Content          LeaveIt  issue    TOC                                                                                LeaveIt                            toc   Chrome          Step 1       toc html        layouts partials     toc html          html      Params toc   default true         Title       emtLiPtrn       s   s  s      s         rplcEmtLi      1         TableOfContents   replaceRE  emtLiPtrn  rplcEmtLi   safeHTML       end                TableOfContents           Hugo TOC  issue          H1 bug                Step 2    single html    layouts _default      single html     single html                                     html    partial  toc html             max width 300px  TOC           overflow auto  top  100px  bottom 50px   TOC          p s                                       Chrome         Edge                       single html                css    webkit scrollbar   width  8px  height  8px       webkit scrollbar thumb   height  40px  background color   eee  border radius  16px    hover   background color   ddd        Step 3                             TOC     assets css _custom scss            css  media screen  max width  1224px     post toc   display  none                  Step 4           p s                                       assets css _custom scss             scss  post toc  position  fixed  left 20px max width 300px  overflow auto  top  100px  bottom 50px     toc wrapper      webkit scrollbar   width  6px  height  8px       webkit scrollbar thumb   height  40px  background color   eee  border radius  16px    hover   background color   ddd             Step2    layouts partials toc html              class     toc wrapper     Step2                       html    partial  toc html              H1 H2 H3 H4 H5             H1                              H2                    H1    H2    H2    H2    H2    H2    H2    H2    H2    H2    H2                                              Hugo   Variable  WordCount   toc html                 html     gt  WordCount 80     Params toc   default true         Title           WordCount         toc     TableOfContents          toc    replaceRE  n n     toc         safeHTML  toc        end            1     gitalk     disqus              https   github com liuzc LeaveIt pull 11 commits d5aa80b08057bbdf5ac7f7c319ce68e5646226b9  2  Hugo    TOC https   gohugo io content management toc   3  Hugo TOC issue https   github com gohugoio hugo issues 1778",
        "objectID": "posts/博客侧边导航栏",
        "date": "2019-08-22T06:20:08.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ]
    },
    {
        "title": "Hugo博客代码高亮",
        "uri": "posts/博客代码高亮",
        "content": "LaTeX                                                   Hugo                  LeaveIt      issue                 Hugo extented   Sass SCSS     Step 1    hugo extended    https   github com gohugoio hugo releases            extended              hugoextended0 56 3_Windows 64bit zip  Step 2           LeaveIt              scss     themes LeaveIt assets css common page post scss                                https   blog hgtweb com 2019 code csdn      Step 3            https   liuzhichao com 2018 hugo theme leaveit             themes LeaveIt assets css common prettyprint default scss                                                    Highlight                                                             LeaveIt                             html hljs initHighlightingOnLoad            c  include int main void    printf  Hello world     return 0       tex  documentclass article            begin document  Hello  world   end document     python import os print  Process   s  start       os getpid    works Unix Linux Mac  pid   os fork   pid    0  print  I child process   s  parent  s      os getpid    os getppid     else  print  I   s  just created child process   s       os getpid    pid                          no class  documentclass article            begin document  Hello  world   end document                 Hugo     LeaveIt https   liuzhichao com 2018 hugo theme leaveit    Hugo          https   note qidong name 2017 06 24 hugo highlight      LeaveIt    code   https   blog hgtweb com 2019 code csdn",
        "objectID": "posts/博客代码高亮",
        "date": "2019-08-01T06:56:47.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ]
    },
    {
        "title": "博客添加在线通讯",
        "uri": "posts/博客添加在线通讯",
        "content": "Wyane                              Hexo                                                      Tidio Hugo         Step 1           Tidio       https   www tidiochat com panel login                                                               Step 2        html                                                 footer html                        Tidio          SETTINGS    Developer    Project data       public key         theme tidio key     Step 3         Channel    Live chat   Appearance                                       Hexo                http   yearito cn posts hexo advanced settings html",
        "objectID": "posts/博客添加在线通讯",
        "date": "2019-09-15T06:17:57.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ]
    },
    {
        "title": "部署博客到阿里云服务器",
        "uri": "posts/部署博客到阿里云服务器",
        "content": "100RMB                github pages                                       Hugo      Hugo                     Ubuntu                 Step 1    nginx                                 root       nginxsudo apt get install nginx       nginx 1 14 0  Ubuntu     nginxservice nginx start p s       service nginx stop      nginx  s reload             HTTP 80   ref               8080      HTTP                ip    Welcome nginx                   home user www blog          index html                           HI     index html                          drwx                      drwxr xr x         nginx        nginx  t   nginx       config location     root   index html                            nginx       location    root        index html                     nginx  etc nginx nginx conf               etc nginx sites enabled default       root  var www html     root   index html                       nginx conf      include sites enabled   conf      include sites available    nginx    nginx  s reload                IP      index html                  403 Forbidden      index html                            Step 2       git              Git                             adduser git  unix root xxx  xxx xxx  adduser git Adding user  git      Adding new group  git   1000      Adding new user git   1000  group git      Creating home directory   home git      Copying files   etc skel      Enter new UNIX password  Retype new UNIX password                            passwd git              git   su git                           ssh   mkdir  ssh    chmod 700  ssh         authorizedkeys       touch  ssh authorizedkeys    chmod 600  ssh authorized_keys       authorized_keys                     https   gitee com help articles 4181 article header0       Windows           C  Users xxx  ssh               ssh   cat  xxx id_rsa john pub ssh rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n ww ouN4gSLKssMxXnBOvf9LGt4L     git     mkdir               home git repo cd       git init   bare blog git      git init                               git            git   index             git hooks   git hooks                       git         cd        blog git hooks  vim post receive                       bash    bin sh set  e DIR_ONE  home user www blog                 cd  DIR_ONE git   work tree      git dir       blog git checkout  f   chmod 771 post receive             Step 3                    Step 4     remote  error  not lock config file  home user www blog  git config  Permission denied                  chown git           chgrp git           Step 4      git              Hugo        public     git remote set url   add origin xxx git   xxx git usrname    ip          blog git     git remote  v                          git remote set url   delete origin xxx git   git push                     push                              linux      r       x               HEXO             HEXO                     Hexo                    Git                 Git Hooks                 Hexo       GitHub Page       Leeyuxun s blog        Git Hooks   post update hook  post receive       post update  hook tell heads pushed  does not know original updated values are  so poor place log old  new     hook does original updated values refs  consider instead need them     https   stackoverflow com questions 9653165 whats the difference between post receive and post update git init       Running git init existing repository safe  will not overwrite things already there  primary reason rerunning git init pick newly added templates    http   www voidcn com article p cvrvucje bsk html",
        "objectID": "posts/部署博客到阿里云服务器",
        "date": "2020-02-29T11:18:30.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "linux"
        ]
    },
    {
        "title": "测试博客新主题",
        "uri": "posts/测试新主题loveit",
        "content": "LeaveIt                Hugo   top1   academic                              LoveIt                LoveIt                          C    include int main    main        printf  Hello World      printf      return 1           C      include   std  cout          include             int main     printf  Hello World   Way 1 n      printf      puts  Hello World   Way 2      puts    puts  Hello        World   Way 3            std  cout    Hello World   Way 4    std  endl    C          return 1                 print                                  n         wow                          n                                      n                                      n                                      n                   difference    n                                      n                                      n                                      n                                      n                                      n                        electrons     n                                      n                                      n                                      n           amaze                      n                                      n                                      n                                      n           begin aligned  x   a b c      d e      f g  end aligned         begin aligned  x   a b c      d e      f g  end aligned",
        "objectID": "posts/测试新主题loveit",
        "date": "2020-05-11T09:45:40.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ]
    },
    {
        "title": "错排问题",
        "uri": "posts/错排问题",
        "content": "N           N                                                              N                                                   n 1              n 1              n 2                  2                            n 1                      1 3 4     N                          n 2                  3               1 4     N       n 1               D N   N           N 2   1   2                     2   1   D N    1 N 3   1   2   3                            2   3   1     3   1   2   D N    2 N 4   1   2   3   4                                                              2   1   4   3     2   3   4   1     2   4   1   3     3   4   1   2     3   4   2   1     3   1   4   2     4   3   2   4     4   1   2   3     4   3   1   2   D N    9                             N 4               N 1                k             2              k                              k       k                                          3         k 2         3    4    3     4          2   2          D 2          D N 2         k 2          2 3 4    1 4 3                 1       2       1       2                   D 2                3   3          D N 1        2   3   4                  3   4   1 2      4   1 2    3     k    N 1       D N     N 1    D N 1    D N 2                                class Solution  def climbStairs self  n  int     int  n    1  return 0 elif n    2  return 1 elif n    3  return 2 a b   1 2 range 4  n 1   tmp   b b    i 1     b   a    tmp return b",
        "objectID": "posts/错排问题",
        "date": "2020-09-16T05:21:57.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "动态规划"
        ]
    },
    {
        "title": "打字练习",
        "uri": "posts/打字",
        "content": "1 https   www keybr com                                                                      2 https   www typingclub com",
        "objectID": "posts/打字",
        "date": "2019-07-23T06:45:49.000Z",
        "categories": [
            "教程-ღ-点评"
        ]
    },
    {
        "title": "第一篇随笔",
        "uri": "posts/第一篇随笔",
        "content": "",
        "objectID": "posts/第一篇随笔",
        "date": "2019-06-14T10:30:14.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "東方半岛",
        "uri": "posts/東方半岛",
        "content": "5                                                                                                                                                                   Important",
        "objectID": "posts/東方半岛",
        "date": "2019-08-12T06:35:36.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "过去的事",
            "照片"
        ]
    },
    {
        "title": "动态规划",
        "uri": "posts/动态规划",
        "content": "dynamic programming  DP                                                                                 DP                  DP          Overlapping Subproblems                       Optimal Substructure                             DP  DP                                                                                                          f n  f n 1  f n 2                                                                                                                                   DP             1             Memoization  Top Down                                                                                        2             Tabulation  Bottom Up                          p s                       leetcode300                Recursion Memoization       Dynamic Programming       DP                                 leetcode70                                            leetcode300            leetcode44                                              leetcode712        ASCII",
        "objectID": "posts/动态规划",
        "date": "2019-07-01T17:27:53.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "动态规划"
        ]
    },
    {
        "title": "二零二零年纪实录",
        "uri": "posts/二零二零纪实录",
        "content": "2020 1 29                2020 1 1       2020 1 2 19 45                                                           python                      2020 1 3 23 59 b     364      2w                 2020 1 4  1 8           2020 1 9  1 10                   2020 1 11 23 59           2020 1 12           3 1  2020 1 13  1 15        2020 1 16  ipad2019      2020 1 17          5            50                                                       2019 12 30                     2020 1 23   2        10                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 buff                   2020 4 4                                      1 29",
        "objectID": "posts/二零二零纪实录",
        "date": "2020-01-29T10:02:45.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "抗击新冠肺炎"
        ],
        "author": "草祭"
    },
    {
        "title": "好天气",
        "uri": "posts/好天气",
        "content": "https   www nbfox com wp content uploads 2020 03 11 20200311190119 5e69357f0ef97 jpg",
        "objectID": "posts/好天气",
        "date": "2020-02-17T08:28:57.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "回溯算法初探",
        "uri": "posts/回溯算法",
        "content": "1                                                            2                3                                                                                     C void backtrack state s    if s end               sols append path             else if s no ways                   return    else               for i possible ways   next_s   s           backtrack next_s                s   redo s                       39  Combination Sum  python class Solution  def combinationSum self  candidates  List int   target  int     List List int    size   len candidates  size    0  return                                        1              2                     candidates sort                         path      res            size    range    size     self __dfs candidates  0  size  path  res  target  return res def __dfs self  candidates  begin  size  path  res  target             target    0  Python                    path              path copy   res append path     index range begin  size   residue   target   candidates index                                  residue List int   res   list   def backtrack index  int          index    len S  len res     3  return True curr   0 range index  len S              0     index S index      0   break            curr   curr   10   ord S i     ord  0            int           curr   2  31   1  break          res                                  len res    2 curr   res  2    res  1   break len res               Backtracking https   github com selfboot LeetCode tree master Backtracking                             https   www cnblogs com steven_oyj archive 2010 05 22 1741376 html",
        "objectID": "posts/回溯算法",
        "date": "2019-08-26T12:31:48.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法"
        ]
    },
    {
        "title": "回溯算法题",
        "uri": "posts/回溯算法题",
        "content": "17            s  digits 0   n 1      letter digits 0     s  digits 1   n 1      letter digits 0     letter digits 1     s  digits 2   n 1    class Solution  def letterCombinations self  digits  str     List str   digits        return list                            phoneMap      2    abc    3    def    4    ghi    5    jkl    6    mno    7    pqrs    8    tuv    9    wxyz     res      def backtrack index  s   index    len digits   res append s  return d phoneMap digits index    backtrack index   1  s   d    s list                   s append d  backtrack index   1  s  s pop   backtrack 0      return res      46      Perms nums 0   n 1                Perms nums  0   n 1                 17                           class Solution  def permute self  nums  List int      List List int    not nums  return    used    False    len nums  res      def backtrack index  p   index    len nums   res append p        python       p     p       res      p return i  n enumerate nums   n p                        bool               continue  if used i   continue p append n  used i    True backtrack index 1  p  p pop   used i    False backtrack 0      return res 47      II                       1 1 2      1 1 2   1 2 1   2 1 1   class Solution  def permuteUnique self  nums  List int      List List int    not nums  return    nums sort         res      used    False    len nums  def backtrack index  p   index    len nums   res append p     return i  n enumerate nums   used i   continue   0 n    nums i 1  not used i 1     not used i 1       continue p append n  used i    True backtrack index 1  p  p pop   used i    False backtrack 0      return res      77       n 4 k 2      1 2    1 3    1 4    2 3    2 4    3 4       1 2   2 1        class Solution  def combine self  n  int  k  int     List List int    n List List int    n bool  m  n   len board   len board 0   len word     0  return True used     False  n _ range m   def searchWord index  startx  starty   index    len word  1 wordindex     board startx  return True wordindex     board startx  usedstartx   True               1 0    0 1    1 0    0  1     for                            inArea x y    startx    1 not usedstartx 1  searchWord index 1  startx 1  starty   return True   startx   1 not usedstartx  searchWord index 1  startx  starty 1   return True   starty int  m  n   len grid   len grid 0   n    0  return 0 d     0 1    1 0     1 0    0  1   res   0 visited     False    n _ range m   def isArea x  y   return x    0 y   0 x List List str    n    Q           1     Q    Q         Q    assert len row     n board      x row  tmp         n tmp x     Q  board append    join tmp   return board    n         index            row  def putQueen index  row   index    n  res append gernerateBoard row   return     index       i  range n                       not col i  not dia1 index   i  not dia2 index i n 1   row append i  col i    True dia1 index   i    True dia2 index i n 1    True putQueen index 1  row  col i    False dia1 index   i    False dia2 index i n 1    False row pop   putQueen 0      return res 52 N Queens 37 Sudoku Solver                  https   coding imooc com learn list 82 html",
        "objectID": "posts/回溯算法题",
        "date": "2020-12-10T03:06:09.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "计算机科学中的逻辑学题记",
        "uri": "posts/计算机科学中的逻辑学",
        "content": "logic  formal language              computability        complexity                   T Theory   STOC   F Foundation   FOCS                                                                                                               1    1    2              1    1    2                 1 1 2                                                                     1    1    2                                                                                                                                                                                             1  works         2  works                3  correct                                        programming verification                                                                                                    Try think higher abstraction level                 Learn argue formally                                  Open perspective programming",
        "objectID": "posts/计算机科学中的逻辑学",
        "date": "2019-09-21T06:23:03.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "计算机科学中的逻辑学",
            "数学"
        ]
    },
    {
        "title": "内存层次设计",
        "uri": "posts/计算机体系结构1",
        "content": "Point   cpu                               disk                                   c a b          add  1  2  3  Hit rate                        cache  cache memory  5 Hit time RAM access time Time determine hit miss  Miss penalty  time replace block lower level  including time replace CPU   CPU       Average memory access time Hit time   Miss rate   Miss penalty                    Miss penalty                                    page     page table                 virtual page numbes   physical frames          Cache                 https   blog csdn net dongyanxia1000 article details 53392315",
        "objectID": "posts/计算机体系结构1",
        "date": "2019-09-18T01:52:42.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "计算机体系结构"
        ]
    },
    {
        "title": "记一次服务器被黑",
        "uri": "posts/记一次服务器被黑",
        "content": "dota3 tar gz                                   ip   ssh                                         b                                                                                                        SSH                                         IP                    lastb                                   9    157                               4        1                   2                                        3  SSH       IP     4          IP     5                          ssh                            ssh   Step 1       root    vim  etc ssh sshd_config          Port 22      Port  xxxx   xxxx            strategy used options default sshd_config shipped OpenSSH specify options default value possible  leave commented  Uncommented options override default value   Port 22 Port 4522  AddressFamily  ListenAddress 0 0 0 0  ListenAddress            systemctl restart sshd CentOS6    etc init d sshd restart   SSH              22          Step 2 a         ECS                               SSH       b                  2             iptables  I INPUT  p tcp   dport 4522  j ACCEPT service iptables save           22                                                                                     Step 1                ssh keygen      windows          C  Users       ssh                 SSH         idrsa     idrsa pub                             xxx xxx pub     Step 2                    ssh               ls  al         ssh                     700    ssh        authorized_keys         600    authorizedkeys       idrsa pub        authorized_keys       p s                       chown g w  HOME                      authorizedkeys          sshd                        ref ssh  authorizedkeys             Step 3               ssh              xshell             public key        Credentials      id_rsa                                                                             su                         vim  etc ssh sshd_config  vim           PasswordAuthentication     no       systemctl restart sshd  ssh  UseDNS no AddressFamily inet SyslogFacility AUTHPRIV PermitRootLogin yes PasswordAuthentication no                           root             PermitRootLogin     no  without password       root                     SSH       Linux           IP  https   www freebuf com articles system 205384 html   ssh       https   www cnblogs com wzstudy p 10711104 html          https   blog csdn net superljn article details 81532073 sshd_config   PermitRootLogin     https   yq aliyun com articles 62501",
        "objectID": "posts/记一次服务器被黑",
        "date": "2020-06-09T06:41:26.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "linux"
        ]
    },
    {
        "title": "建站历史001",
        "uri": "posts/建站历史001",
        "content": "hugo theme learn                 LeaveIt                 tag                                               LeaveIt     Valine                       Hugo     Hugo             Hugo   Hugo      LeaveIt   LeaveIt    Valine   Valine            Hugo   Valine",
        "objectID": "posts/建站历史001",
        "date": "2019-06-30T05:23:35.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史002",
        "uri": "posts/建站历史002",
        "content": "199RMB   yyqx online                        HTML5                                                         Favicon Generator         GitHub Pages                         b up CodeSheep",
        "objectID": "posts/建站历史002",
        "date": "2019-07-01T09:58:52.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ],
        "featured_image": null
    },
    {
        "title": "建站历史003",
        "uri": "posts/建站历史003",
        "content": "Hugo                                    LeaveIt",
        "objectID": "posts/建站历史003",
        "date": "2019-08-23T04:43:09.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史004",
        "uri": "posts/建站历史004",
        "content": "Tool                                  LeaveIt     LeaveIt Hugo Theme   github",
        "objectID": "posts/建站历史004",
        "date": "2019-09-20T13:46:59.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史005",
        "uri": "posts/建站历史005",
        "content": "Tool                   Hugo       Netlify   Github Pages seacj netlify com       4   DNS                                          LeaveIt     LeaveIt Hugo Theme   github                           LeaveIt           Coding         Coding              Hugo       Netlify   Github Pages      Hugo       Netlify   Github Pages",
        "objectID": "posts/建站历史005",
        "date": "2020-02-26T12:30:05.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史006",
        "uri": "posts/建站历史006",
        "content": "LeaveIt assets css common page post scss  font size                CSS JS",
        "objectID": "posts/建站历史006",
        "date": "2020-04-08T08:22:17.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史007",
        "uri": "posts/建站历史007",
        "content": "Hugo   LoveIt                                    hugo algolia  s                           bug                  typora plugins win img   RSS                               LoveIt                       Hugo    Algolia               Hugo    Algolia                typora plugins win img typora plugins win img",
        "objectID": "posts/建站历史007",
        "date": "2020-05-12T05:00:23.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "建站历史008",
        "uri": "posts/建站历史008",
        "content": "github                  GitHub                   Arctic Code Vault Contributor                                 GitHub              GitHub                                        1000         https   www sohu com a 408230132_115128          github                                                        github",
        "objectID": "posts/建站历史008",
        "date": "2020-07-23T08:43:32.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "建站历史"
        ]
    },
    {
        "title": "卡塔兰数",
        "uri": "posts/卡塔兰数",
        "content": "Catalan number                               leetcode                                                            96                 n    1     n                                                                                  1 2 3 4    1       dp 0  dp 3      null      2 3 4   2       dp 1  dp 2       1       3 4   3       dp 2  dp 1       1 2       4   4       dp 3  dp 0       1 2 3      null   dp n     sum_ i 0   n 1 dp i  dp n i 1                                        O 1       O n         class Solution object   def numTrees self  n   C   1 range 0  n   C   C   2 2i 1   i 2  return int C                 frac 1  n 1 C_ 2 n   n                             acwing 130       n          math          2         math   import math class Solution  def numTrees self  n     math factorial 2 n  B   math factorial n  return A  B  B   n 1     math                   class Solution  def numTrees self  n   C   1 print A  B  range n 1 2 n 1   C  i range 1 n 1   C C  i                    return C   n 1        n          1 2 3 4     n                             1   1   1   1   1   1           1  1       C_ 2n  n         2n     n  1         1        1          1    1   1   1   1                              1   1   1   1          3  1   3        1   1   1   1      1  1 3  1             2m 1 1 3 5          1   2m    m  1   m  1  2n  2m 1      n m  1   n m 1  1    2m 1       2m     m  1   m  1  2m 1    1  2n  2m 1      n m  1   n m 1  1  n 1  1   n 1  1      C_ 2n   n 1            n 1  1 n 1  1                       C_ 2n   n 1    n 4         m 1   1   1   1   1       1   1   1   1    1   1   1   1       1   1   1   1    1   1   1   1       1   1   1   1  m 3   1   1   1   1       1   1   1   1        C 2n  n   C 2n   n 1                               nxn            1         1                                                n 4                                n      n            2n   n                  C_ 2n  n                     y  x 1                 n n              y x 1               y x 1                    n 1 n 1                                  n 1  n 1        C_ 2n   n 1     p s   C_ 2n   n 1           2n n 1   n 1    n 1                    n                                          1      1                   acwing  130     n         1 2 3   n                    n                 acwing      n          n 15000                         python  math          C                            4 3     2n         n   50  n   100     50                           2n                          50      100                  https   zhuanlan zhihu com p 56821103                                                         https   leetcode cn com circle article lWYCzv  AcWing 130                          https   blog csdn net qq42815188 article details 104286409 utmmedium distribute pc_relevant none task blog title 2 spm 1001 2101 3001 4242",
        "objectID": "posts/卡塔兰数",
        "date": "2020-09-23T07:03:25.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "力扣shell题",
        "uri": "posts/力扣shell题",
        "content": "192           bash             words txt             cat words txt   xargs  n 1   sort   uniq  c   sort  nr   awk   print  2   1   xargs        n 1             d         uniq                           uniq  c            sort  nr    n                              11 2      words txt  day sunny sunny b b b b     14 4 b 4 3 sunny 2 day 1 193                                     file txt     bash                                           xxx  xxx xxxx   xxx xxx xxxx  x                              awk      0 9  3      0 9  3      0 9  3   0 9  4     file txt",
        "objectID": "posts/力扣shell题",
        "date": "2020-11-27T07:23:31.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "“leetcode\"",
            "linux"
        ]
    },
    {
        "title": "立个flag",
        "uri": "posts/立个flag",
        "content": "100                                            100                                                                                                                                                                                                                                                                                       flag               pygame           sv                                      MIT 6 046J",
        "objectID": "posts/立个flag",
        "date": "2020-02-23T09:34:30.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "罗技K480蓝牙键盘の体验",
        "uri": "posts/罗技K480蓝牙键盘体验",
        "content": "2    K480                                                             windows               K480                      K480       3                  2              K480 TOP1                                                                                                                               K480  128                          K480     https   www logitech com cn zh cn manuals k480 immersion guide                                                                                                           home          home         end            home  fn      end  fn                     K480   HOME END                          pad                              chrome    f1        f4                         K480    K480                                                         K480        1 2                                    K480                                                                                                     iPad            PC                          K380      K380                                         106                       K480                       K480",
        "objectID": "posts/罗技K480蓝牙键盘体验",
        "date": "2020-01-08T05:44:08.000Z",
        "categories": [
            "教程-ღ-点评"
        ],
        "tags": [
            "产品体验"
        ],
        "featured_image": "https://pic.superbed.cn/item/5e15717976085c328964216b.jpg"
    },
    {
        "title": "命题逻辑的语义",
        "uri": "posts/命题逻辑的语义",
        "content": "Propositional logic formal language                                 alphabet   p q r       p1 p2 p3         neg   wedge   vee   rightarrow              string                 neg     vee p q  rightarrow                                           well formed    well formed formula         formula     p s  well formed                well formed                  well formed               parse tree            neg p  vee q  rightarrow  neg p      wedge r   parse tree             parse tree  Semantics propositional logic    premise    phi_ 1         conclusion    psi                          phi1   phi2   cdots   phi_n  vdash  psi        phi1   phi2   cdots   phi_n  vDash  psi                                                                                                    phi1   phi2   cdots   phi_n  T    psi   T                                 soundness                      completeness                                                                                    Normal form     vDash                                                  Normal form                                                          CNF                          Soundness Completeness  https   zhuanlan zhihu com p 49956452        logic computer science    http   dcn icc spbstu ru  karpov  D0 9A D1 83 D1 80 D1 81 20 D0 9B D0 9E D0 93 D0 98 D0 9A D0 90  D0 94 D0 9E D0 9F D0 9E D0 9B D0 9D D0 98 D0 A2 D0 95 D0 9B D0 AC D0 9D D0 9E D0 95 20 D0 A7 D1 82 D0 B5 D0 BD D0 B8 D0 B5 LogicInCS pdf   p s",
        "objectID": "posts/命题逻辑的语义",
        "date": "2019-12-13T12:55:38.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "计算机科学中的逻辑学",
            "数学"
        ]
    },
    {
        "title": "命题逻辑和自然推演",
        "uri": "posts/命题逻辑和自然推演",
        "content": "propositional logic         Declarative sentences             declarative                  It based propositions  declarative sentences one can  principle  argue true false              sum numbers 3 5 equals 8       non declarative        please pass salt  Ready  steady  go                                                                     specification            Formalize declarative sentences    Formalize       3                     defined rigorously             formalize          symbol   Example                       John      John                           Jane       Jane     Jane              Jane    Structures   Example1   Example2                                                        Jane        John      Jane      Formal argument                               p not q  r     Not r p  Therefore  q       Natural deduction             a set rules          premise         conclusion                                        negation         conjunction         disjunction       implication   sequent                  intension                                                                                                               p    p                                                            p    p                                             John                                                                                                                                                                           frac premise    premise  conclusion  rule          rule                     wedge i           introduction         elimination                   Rules conjunction And introduction rule    frac  phi  qquad  psi   phi  wedge  psi   wedge i   And elimination rules     frac  phi  wedge  psi   phi   wedge e_ 1         frac  phi  wedge  psi   psi   wedge e_ 2     Rules double negation Introduction rule     frac  phi   neg  neg  phi   neg  neg    Elimination rules     frac  neg  neg  phi   phi   neg  neg e                                neg  neg   1             neg  neg i       p        Rules implication Introduction                                                       Implies elimination rule     frac  phi  quad  phi  rightarrow  psi   psi   rightarrow e    Modus Tollens  MT short  rule                 primitive rule           derived rule      frac  phi  rightarrow  psi quad  neg  psi   neg  phi   mathrm MT     Rules disjunction Rules negation                  double negation      contradiction                   contradiction  Contradictions expressions form   neg  phi  wedge  phi    phi  wedge  neg  phi     phi  arbitrary formula   Note  p  wedge  neg p  vdash q  valid                                                               Bottom elimination       frac  perp   phi   perp  mathrm e     Not elimination     frac  phi  quad  neg  phi   perp   neg e",
        "objectID": "posts/命题逻辑和自然推演",
        "date": "2019-09-22T04:19:26.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "计算机科学中的逻辑学",
            "数学"
        ]
    },
    {
        "title": "记一次Ubuntu图形化界面配置",
        "uri": "posts/配置阿里云服务器图形化界面",
        "content": "xshell              Ubuntu desktop apt get install ubuntu desktop reboot    https   blog csdn net zwq912318834 article details 80528374                                                                              2 G apt get install ubuntu desktop         xrdp          sudo apt get install xrdp apt get install vnc4server apt get install xubuntu desktop           sudo apt get install xrdp   xrdp     windows                               xrdp          root                                                              Authenticate                                                         apt get install vnc4server     xubuntu desktop      ubuntu desktop 1 3  apt get install xubuntu desktop               gdm3                                                      etc polkit 1 localauthority conf d              02 allow colord conf                polkit addRule function action  subject          action id     org freedesktop color manager create device         action id     org freedesktop color manager create profile         action id     org freedesktop color manager delete device         action id     org freedesktop color manager delete profile         action id     org freedesktop color manager modify device         action id     org freedesktop color manager modify profile          subject isInGroup   users           return polkit Result YES                            ubuntu                                  CSDN   samtaoys          CC 4 0 BY SA                              https   blog csdn net samtaoys article details 91042262                                         cpu                             https   www ivpser com windows smooth                              xrdp vnc     xrdp    Windows    Ubuntu 16 04 https   www linuxidc com Linux 2017 09 147112 htm",
        "objectID": "posts/配置阿里云服务器图形化界面",
        "date": "2020-03-01T07:29:17.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "博客搭建",
            "linux"
        ]
    },
    {
        "title": "奇奇怪怪的梦",
        "uri": "posts/奇奇怪怪的梦",
        "content": "A      wsh                                                          A                                                                                                                                                                                                                                                                                                                                                                                              LED",
        "objectID": "posts/奇奇怪怪的梦",
        "date": "2020-03-15T04:29:24.000Z",
        "categories": [
            "随笔-ღ-心得"
        ]
    },
    {
        "title": "双拼打字",
        "uri": "posts/双拼打字",
        "content": "Step 1                                                     Step 2                              windows          windows                                         ipad                                               https   www v2ex com t 592527    win10              https   jingyan baidu com article fd8044fad5e1ca5030137a6b html    windows10             https   www jianshu com p cc4cc916f5fc",
        "objectID": "posts/双拼打字",
        "date": "2020-02-21T14:46:57.000Z",
        "categories": [
            "教程-ღ-点评"
        ]
    },
    {
        "title": "随笔20210203",
        "uri": "posts/随笔20210203",
        "content": "15",
        "objectID": "posts/随笔20210203",
        "date": "2021-02-03T09:14:46.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "网站配色",
        "uri": "posts/网站配色方案",
        "content": "1      http   tool c7sky com webcolor  2       http   nipponcolors com                   http   zhongguose com",
        "objectID": "posts/网站配色方案",
        "date": "2019-06-24T10:41:54.000Z",
        "tags": [
            "博客搭建"
        ],
        "categories": [
            "博客"
        ],
        "author": "草祭"
    },
    {
        "title": "博客迁移至码云",
        "uri": "posts/网站迁移至gitee",
        "content": "github           github         VPN               185 199 xxx xxx         32    175ms TTL 52                                        gitee              gitee   hugo                                                            github pages                              Pages   github   git page         Pages      Pages            Pages                       Pages                      Github Pages              Pages        Pages    Jekyll Hugo Hexo          Pages                                                                                                                                                                  pages          HTTPS                               Pages   Step 1                                      your_name gitee io                         https   yourname gitee io reponame              Gitlab Github Gitee                    push            git gitee com  Permission denied  publickey   fatal  not read remote repository            https   gitee com profile sshkeys                         https   gitee com help articles 4181 article header0       Windows           C  Users xxx  ssh          git mkdir pages cd pages git init touch README md git add README md git commit  m  first commit  git remote add origin https   gitee com yourname yourname git git push  u origin master       README md     OK   Step 2      Pages                   pages        p s                           hugo   public    push      Pages                     index html                 Pages    Step 3          Hugo                 public           hugo  D   baseUrl  www      com     cd public     public   push           Step1                                    http   username gitee io                      212 64 62 174         32    36ms TTL 51                      github          CNAME                                     Gitee com      V1 2 http   git mydoc io  t 154714        Gitlab Github Gitee             https   www jianshu com p 68578d52470c   Pages               1    https   jingyan baidu com article 6181c3e0cb0fae152ef153f1 html      push github    https   blog csdn net u014532775 article details 89684206",
        "objectID": "posts/网站迁移至gitee",
        "date": "2020-02-25T14:01:23.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ]
    },
    {
        "title": "随笔",
        "uri": "posts/为什么要写随笔",
        "content": "",
        "objectID": "posts/为什么要写随笔",
        "date": "2019-06-14T12:37:23.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "谓词逻辑",
        "uri": "posts/谓词逻辑",
        "content": "first order logic      predicate                                     S x               x       Y x y             x y                               C java                                               a b      a b                 Type Theory                                formal      formal               set predicate symbols      P          D    0 1               set function symbols      F set constant symbols      C                                                                         t1 t2                                            forall x P x   wedge Q x     rightarrow  neg P x   vee Q y                                    x                     x      x             substitution           x       t       phi              phi t   x          phi            x     t      Example                                phi f x  y    x                                                                                 2                                               x    P    x   P                              logic computer science    http   dcn icc spbstu ru  karpov  D0 9A D1 83 D1 80 D1 81 20 D0 9B D0 9E D0 93 D0 98 D0 9A D0 90  D0 94 D0 9E D0 9F D0 9E D0 9B D0 9D D0 98 D0 A2 D0 95 D0 9B D0 AC D0 9D D0 9E D0 95 20 D0 A7 D1 82 D0 B5 D0 BD D0 B8 D0 B5 LogicInCS pdf   p s",
        "objectID": "posts/谓词逻辑",
        "date": "2019-12-15T10:07:01.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "计算机科学中的逻辑学",
            "数学"
        ]
    },
    {
        "title": "我的小学",
        "uri": "posts/小学",
        "content": "123                 123                                3                                                                                                                                                                                                                                                                                                                                                                             LF2                                     5",
        "objectID": "posts/小学",
        "date": "2019-07-17T11:06:24.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "过去的事"
        ]
    },
    {
        "title": "咲良田的思想实验",
        "uri": "posts/咲良田的思想实验",
        "content": "1         EP01                                                                                                                                                                                   2     EP06      swampman      1987                                                 swampman      swamp    man                                                                                                                                                                                                                                                                                                                         3   5      EP20            5         5",
        "objectID": "posts/咲良田的思想实验",
        "date": "2020-07-25T04:18:27.000Z",
        "categories": [
            "随笔-ღ-心得"
        ],
        "tags": [
            "随笔"
        ]
    },
    {
        "title": "音频重采样简述",
        "uri": "posts/音频重采样",
        "content": "python librosa                 48kHz    8kHz                      sr sampling rate                             48kHz   p232_072 wav                 myp232072_8kHz wav      librosa        p2320728kHz wav           2 0     my2p232072_8kHz wav              4 4 48 8            python     times         def mydownsample data inputsr output_sr   assert inputsr outputsr    0 times   inputsr  outputsr   np empty len data   times 1  i  d enumerate data   i times    2  out i  times    data i  return                     librosa                                                2                                                                                                                                   18               2                           1 9                          1             4500Hz 5500Hz         sr10000                   5500 Hz     10000            4500 Hz              7700 Hz   2300 Hz           9900 Hz   100 Hz              aliasing                               10000         5000                 5000           5000 Hz                                      http   en wikipedia org wiki Nyquist_frequency      aliasing         0               1100 Hz        5       12100 Hz       5000 Hz          2100 Hz       0 Hz            2100 Hz       2 4              2100 Hz        4300 Hz         2                            20  t        18                             frac 18  20 t              t         sr   frac 1   t                                frac 2  20 t                                                                                                             2 0  python scipy import signal import soundfile sf data sr   sf read  p232_072 wav   Fs_highest   4000 wn 2 Fshighest sr     Fshighest hz       b    signal butter 8  wn   lowpass          8          filtedData   signal filtfilt b  a  data   data        new   my_downsample filtedData 48000 8000  sf write  my2p232072_8kHz wav  new 8000                         3 0  times             times        python   times                def mydownsampleavg data inputsr outputsr   assert inputsr outputsr    0 times   inputsr  outputsr   np empty len data   times 1  accu   0 i  d enumerate data   accu  data i  i times    3  out i  times    accu 4 accu   0 return v3   mydownsampleavg data 48000 8000  sf write  my3p232072_8kHz wav  v3 8000       v1                                  v2                            180                               tensorflow pytorch       180                                                                      1         https   zhuanlan zhihu com p 23923059  2      ThinkDSP     http   timag shield blogspot com 2017 04 thinkdsp_27 html  3             https   blog csdn net juhou article details 81194566  4                         https   www zhihu com question 20500497  5       180  https   www jianshu com p 8dfe02b61686  7  Resampling sound sample  filter use  https   stackoverflow com questions 4393545 resampling a sound sample what filter do i use  8  filtfilt    https   github com scipy scipy blob v1 4 1 scipy signal signaltools py L3687 L3885  9  lfilter   https   github com scipy scipy blob adc4f4f7bab120ccfab9383aba272954a0a12fb0 scipy signal signaltools py L1695  10  Applying filter scipy signal  Use lfilter filtfilt  https   dsp stackexchange com questions 19084 applying filter in scipy signal use lfilter or filtfilt  11              https   www bilibili com video av26706434  p 51 t 91  12  scipy signal resample https   docs scipy org doc scipy reference generated scipy signal resample html",
        "objectID": "posts/音频重采样",
        "date": "2020-03-20T13:28:16.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "信号处理",
            "python"
        ]
    },
    {
        "title": "Android Studio上使用JNI",
        "uri": "posts/android_jni",
        "content": "C                       JNI Java Native Interface       Android Studio AS    JNI                   AS                          Step 1    NDK NDK Native Developer Kit                             JNI                                G  android ndk r21        ndk build             Step 2                   Include C   support         Project    Step 3  AS       NDK   Ctrl Alt Shift S       NDK      build gradle     app     build gradle    defaultConfig          moduleName       so          lib moduleName  so  Java    loadLibrary         moduleName    abiFilters  CPU                                    ndk  moduleName  SEnhanceNDK     abiFilters  arm64 v8a    armeabi v7a    x86    x86_64         build gradle     buildTypes         sourceSets   main        jniLibs srcDirs     src main libs   jniLibs srcDirs      jni srcDirs              jni           ref  Error  project contains C   files not using supported native build system    Android mk Application mk                        ndk build       mk         jni     Android mk Application mk         Android mk  LOCAL_PATH      call my dir  include   CLEAR_VARS  LOCAL_MODULE    myNDK   moduleName LOCALSRCFILES    comwhujniproj_JNI c       c     include   BUILDSHAREDLIBRARY  Application mk  APP_ABI    Step 4    JNI       so   1    JAVA       native           java               package                       main java         javah  d    jni com xxx xxx JNI   com xxx xxx JNI             p s      jdk  javah           javac  h                             jdk8                         h                  c                      h           include  comwhusenhance_JNI h  char  gettext    return  Hi         jstring      Java       JNIEnv  env          jobject jobj             JNI this    jstring JavacomwhusenhanceJNI_sayHello JNIEnv  env  jobject jobj     jstring  NewStringUTF  JNIEnv  const char    char  text    I C   text   gettext    return   env   NewStringUTF env text     2     so         jni      ndk build            libs obj         so           jniLibs        libs                      so         AS   Build  Rebuild Project Rebuild                      build gradle  jniLibs srcDirs  jni srcDirs        build gradle        sourceSets   main        jniLibs srcDirs     src main libs   jniLibs srcDirs      jni srcDirs     src main jni       externalNativeBuild  ndkBuild  path file  src main jni Android mk         rebuild    so   app build intermediates ndkBuild debug obj local        2        so   D  AndroidStudioProjects JNIProj app build intermediates transforms stripDebugSymbol debug 0 lib x86 libmyNDK so   D  AndroidStudioProjects JNIProj app build intermediates transforms mergeJniLibs debug 0 lib x86 libmyNDK so                 intermediates ndk          ndk                           so         jnilib        Step 5    MainActivity      package com whu senhance  import android support v7 app AppCompatActivity  import android os Bundle  public class MainActivity extends AppCompatActivity    Override protected void onCreate Bundle savedInstanceState    super onCreate savedInstanceState   setContentView R layout activity_main   String result   new JNI   sayHello    System out println  result     result               JNI         Mac Android Studio 3 1        https   juejin im post 5b90a7c1e51d450e697311de    Android     JNI    AS      https   www bilibili com video BV1qW411L7oY p 35 Android      https   www cnblogs com xqz0618 p 12725515 html Android JNI     LOG      LOCALLDLIBS     L   SYSROOT  usr lib  llog   include    CLEARVARS     https   blog csdn net jjunjoe article details 7020236      Android mk           ref  Android mk                comwhujniproj_JNI c include cljtest h      cljtest            Android mk  LOCALSRCFILES    comwhujniproj_JNI c  Build      Build command failed  Error executing process G  android ndk r21 ndk build cmd arguments  NDKPROJECTPATH null APPBUILDSCRIPT D  AndroidStudioProjects JNIProj app src main jni Android mk NDKAPPLICATIONMK D  AndroidStudioProjects JNIProj app src main jni Application mk APPABI x8664 NDKALLABIS x8664 NDKDEBUG 1 APPPLATFORM android 21 NDKOUT D  AndroidStudioProjects JNIProj app build intermediates ndkBuild debug obj NDKLIBSOUT D  AndroidStudioProjects JNIProj app build intermediates ndkBuild debug lib D  AndroidStudioProjects JNIProj app build intermediates ndkBuild debug obj local x86_64 libmyNDK so   x8664  Compile   myNDK",
        "objectID": "posts/android_jni",
        "date": "2020-06-04T05:43:41.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "java"
        ]
    },
    {
        "title": "图片生成器Artbreeder",
        "uri": "posts/artbreeder",
        "content": "avatar                                avatar                                                       b      LKs                Artbreeder                                              Artbreeder      https   artbreeder com                                            AI       1           2                3        10      10               Step  1              Anime Portraits  Step  2                                                                                      crossbreed                              Edit Genes                   CVPR best paper simGAN                            random                                                     Content Style                                             artbreeder com",
        "objectID": "posts/artbreeder",
        "date": "2020-05-18T06:03:39.000Z",
        "categories": [
            "教程-ღ-点评"
        ],
        "tags": [
            "产品体验",
            "网站推荐"
        ]
    },
    {
        "title": "Awk学习",
        "uri": "posts/awk学习",
        "content": "awk unix                            b up       awk               awk                   txt gold 1 1986 USA American Eagle gold 1 1908 Austria Hungary Franz josef 100 Korona silver 10 1981 USA ingot gold 1 1984 Switzerland ingot gold 1 1979 RSA Krugerrand gold 0 5 1981 RSA Krugerrand gold 0 1 1986 PRC Panda silver 1 1986 USA Liberty dollar gold 0 25 1986 USA Liberty 5 dollar piece silver 1 1986 USA Liberty 50 cent piece silver 1 1987 USA Constitution dollar gold 0 25 1987 USA Constitution 5 dollar piece gold 1 1988 Canada Maple leaf      coins txt                                       awk   print NR   t   0   t   5   coins txt         record   field      NR  1       0                               American Eagle    2    awk 1 gold 1 1986 USA American Eagle American 2 gold 1 1908 Austria Hungary Franz josef 100 Korona Franz 3 silver 10 1981 USA ingot ingot 4 gold 1 1984 Switzerland ingot ingot 5 gold 1 1979 RSA Krugerrand Krugerrand 6 gold 0 5 1981 RSA Krugerrand Krugerrand 7 gold 0 1 1986 PRC Panda Panda 8 silver 1 1986 USA Liberty dollar Liberty 9 gold 0 25 1986 USA Liberty 5 dollar piece Liberty 10 silver 1 1986 USA Liberty 50 cent piece Liberty 11 silver 1 1987 USA Constitution dollar Constitution 12 gold 0 25 1987 USA Constitution 5 dollar piece Constitution 13 gold 1 1988 Canada Maple leaf Maple   awk   print NR NR  NR   coins txt                          NR NR             NR  NR                            awk 11 1 22 2 33 3 44 4 55 5 66 6 77 7 88 8 99 9 1010 10 1111 11 1212 12 1313 13      awk   3  1986 print  0   coins txt         1986       awk gold 1 1986 USA American Eagle gold 0 1 1986 PRC Panda silver 1 1986 USA Liberty dollar gold 0 25 1986 USA Liberty 5 dollar piece silver 1 1986 USA Liberty 50 cent piece   awk   3  1986   1   gold  print  0   coins txt                              awk gold 1 1986 USA American Eagle gold 0 1 1986 PRC Panda gold 0 25 1986 USA Liberty 5 dollar piece                Hello world           awk                 BEGIN       awk                BEGIN         C                 echo Hello world   awk   print  1  NF      Hello world 1 echo Hello world   awk  BEGIN FS       print  1   2  NF      Hello world 2 echo Hello world   awk  BEGIN FS      OFS       print  1   2  NF      Hello world 2    awk    3  xxx   print FILENAME  0   coins txt      FILENAME          coins txt   3  xxx          awk coins txtgold 1 xxx USA American Eagle coins txtgold 1 xxx Austria Hungary Franz josef 100 Korona coins txtsilver 10 xxx USA ingot coins txtgold 1 xxx Switzerland ingot coins txtgold 1 xxx RSA Krugerrand coins txtgold 0 5 xxx RSA Krugerrand coins txtgold 0 1 xxx PRC Panda coins txtsilver 1 xxx USA Liberty dollar coins txtgold 0 25 xxx USA Liberty 5 dollar piece coins txtsilver 1 xxx USA Liberty 50 cent piece coins txtsilver 1 xxx USA Constitution dollar coins txtgold 0 25 xxx USA Constitution 5 dollar piece coins txtgold 1 xxx Canada Maple leaf   awk   print  NF   t    NF 1    coins txt      NF             awk Eagle American Korona 100 ingot USA ingot Switzerland Krugerrand RSA Krugerrand RSA Panda PRC dollar Liberty piece 5 dollar piece 50 cent dollar Constitution piece 5 dollar leaf Maple         awk    g  print  0   coins txt      g     awk gold 1 1986 USA American Eagle gold 1 1908 Austria Hungary Franz josef 100 Korona gold 1 1984 Switzerland ingot gold 1 1979 RSA Krugerrand gold 0 5 1981 RSA Krugerrand gold 0 1 1986 PRC Panda gold 0 25 1986 USA Liberty 5 dollar piece gold 0 25 1987 USA Constitution 5 dollar piece gold 1 1988 Canada Maple leaf                                    a c      abc  axc                                a xy b     axb  ayb   a a zA Z b     axb  aXb               ac     aAc      aac         0          1                       a b     ab b                a 3 c    aaac   a 1 3 c    ac aac aaac   a 2  c    aac aaaaac                        ab  c    abc  ababababc",
        "objectID": "posts/awk学习",
        "date": "2020-03-11T16:55:02.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "linux"
        ]
    },
    {
        "title": "C语言傅里叶变换库",
        "uri": "posts/c语言中的傅里叶变换",
        "content": "C       2  FFTW kissfft                  dll lib                                         sndfile                             include  kiss_fftr h   include  fftw3 h   include  include  kiss_fft h  void fftd double   in  fftwcomplex  out  int nfft    fftw_plan p    p   fftwplandft1d nfft  in  out  FFTWFORWARD  FFTW_ESTIMATE            DFT p   fftwplandftr2c1d nfft  in  out  FFTW_ESTIMATE   fftw_execute p   fftwdestroyplan p     void ifftd fftwcomplex  in  double  out  int nfft    fftw_plan p    p   fftwplandft1d nfft  in  out  FFTWBACKWARD  FFTW_ESTIMATE   p   fftwplandftc2r1d nfft  in  out  FFTW_ESTIMATE   fftw_execute p   fftwdestroyplan p     void testfft     int method   1    const int N   11125  SFINFO sfinfo  SNDFILE  snd_file  sndfile   sfopen  p2320848kHz wav   SFMREAD   sfinfo   float buf2 M     buf2    double  malloc sf_info frames sizeof double      sfreadfdouble sndfile  buf2  sfinfo frames   printf  Sample Rate    d n   sf_info samplerate   printf  Channels    d n   sf_info channels   printf  Sections    d n   sf_info sections   printf  Frames    d n    int sf_info frames   int nframes    int sfinfo frames   M  SNDFILE  output_file  SFINFO outsfinfo     outputfile   sfopen  sine wav   SFMWRITE   sfinfo      printf  Error   Not able open output file  n    return 1     method    0          kissfft kissfftcpx cpx_in M   kissfftcpx cx_out M   kissfftcfg cfg   kissfftalloc M  0  NULL  NULL   kissfftrcfg icfg   kissfftralloc M  1  0  0   kissfftcpx freq_data M   2   1   kissfftscalar time_data M    int n   0  n                           FFTW3    2 FFTW              Win10 VS2017  FFTW         dll         FFTW   http   fftw org install windows html kissfft     http   sourceforge net projects kissfft",
        "objectID": "posts/c语言中的傅里叶变换",
        "date": "2020-08-24T09:13:53.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "信号处理",
            "C语言"
        ]
    },
    {
        "title": "English Dictation 01",
        "uri": "posts/englishdictation01",
        "content": "Daily English Dictation 1 370 Coach Shane       https   www bilibili com video av24173069  p 24      https   www youtube com watch v q 9NCR5MW3U Daily English Dictation 24   SAT cheating scandals uncovered   long island high school      taken   exam least 6 students    alleged SAT cheating scandal uncovered prestigious Long Island high school  college student accused taking college entrance exam least six students  alleged   supposed     uncover   discover   prestigious                Long Island                   taking the  accused Daily English Dictation 25 Snake luis world seris open cool night  49 degrees start game    St Louis takes World Series opener cool night  49 degrees start game    St Louis                          opener     takes  wins 49     9 4                opener  start Daily English Dictation 26 search missing   night generated power flood lights  tears    searched missing throughout night generator powered flood lights family members waited mounds debris  tears  throughout night   night flood lights               generator                 mounds debris",
        "objectID": "posts/englishdictation01",
        "date": "2019-09-13T17:22:22.000Z",
        "categories": [
            "教程-ღ-点评"
        ],
        "tags": [
            "公开课"
        ]
    },
    {
        "title": "Git hooks初探",
        "uri": "posts/git_hooks初探",
        "content": "Git Pages               Git hooks              Git hooks    Git Hooks     Git        commit push receive                  shell python Ruby                                       Git hooks        commit       5       commit      git hooks                  Git hooks       Git            unix xxx xxx   xxx xxx git  ls  a      branches config description HEAD hooks info objects refs   hooks       hooks      unix xxx xxx   xxx xxx git hooks  ls  a applypatch msg sample fsmonitor watchman sample pre applypatch sample prepare commit msg sample pre rebase sample update sample commit msg sample post update sample pre commit sample pre push sample pre receive sample                    hooks           prepare commit msg sample     hooks     git commit                   hooks     prepare commit msg                                         hooks             pre commit       commit message                       pre receive                      post receive                        Email SMS          post receive                 hooks            git                           pre commit                    python    bin sh git hook sure user email user mail repository exists committing set  e global_email   git config   global user email    true  global_name   git config   global user name    true  repository_email   git config user email    true  repository_name   git config user name    true     z   repositoryemail          z   repositoryname          n   globalemail          n   globalname     user email empty echo  ERROR   pre commit hook  Aborting commit user email user name missing  Configure repository  sure not configure globally   exit 1 fi python_file   git hooks py    f   python_file     python  python_file pre commit fi        Git Hooks      Git Hooks                 HEXO                      Git   Git    Git community",
        "objectID": "posts/git_hooks初探",
        "date": "2020-02-29T09:57:41.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "博客搭建",
            "Git"
        ]
    },
    {
        "title": "Git学习",
        "uri": "posts/git学习",
        "content": "Git                                            git       https   learngitbranching js org                                                  cheat sheet                        git branch          git checkout              git checkout  b                          merge       git merge bugFix bugFix     master        1 git checkout bugFix git merge master master     bugfix       2      rebase         bugFix            master                                                       git rebase master                 C3                    C3      Rebase   master      C3               master                   git rebase bugFix      bugFix     master    Git        master                   master        git log            git checkout C1  HEAD      C1       1         master      master       master     master                       3 git branch  f master HEAD 3   master        HEAD    3            git reset git reset HEAD 1                              reset   C2                       git reset git revert                git reset                                     git revert HEAD git revert                                       C2                       C2            C2       C1       Git Cherry pick git cherry pick C2 C4  C2 C4                     side           master                rebase             cherry pick         cherry pick                                        Bug                                                                          Bug                              bugFix           master             fast forward       master           master                                          git checkout master git cherry pick bugFix      Git Learning      https   blog csdn net Edisonleeee article details 94554710",
        "objectID": "posts/git学习",
        "date": "2020-03-03T10:24:03.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "博客搭建",
            "Git"
        ]
    },
    {
        "title": "Hugo博客LaTeX渲染",
        "uri": "posts/hugo博客latex渲染",
        "content": "Typora          Typora  latex                latex                           Chrome                       LaTeX       KaTeX   LaTeX            KaTeX     html document addEventListener  DOMContentLoaded   function     renderMathInElement document body    delimiters     left        right        display  true    left       right       display  false                      html      single html                                    1  tex    2 2         2 2      2  tex    f x   int_   infty   infty widehat f xi  e  2 pi i xi x   d xi         f x   int_   infty   infty widehat f xi  e  2 pi i xi x   d xi      3  tex    2 2         2 2      4     frac  phi  wedge  psi   phi   wedge e_ 1       5  tex     begin aligned  x   a b c      d e      f g  end aligned           begin aligned  x   a b c      d e      f g  end aligned                        5                                            Blog    6  Hugo  LaTeX   https   orianna zzo github io sci tech 2018 03 blog E5 85 BB E6 88 90 E8 AE B06 hugo E4 B8 AD E7 9A 84latex E6 B8 B2 E6 9F 93        KaTeX  MathJax     https   www jianshu com p f2b28954d902     KaTeX   https   katex org      LaTeX    http   math ecnu edu cn  latex docs others mathsymb pdf",
        "objectID": "posts/hugo博客latex渲染",
        "date": "2019-09-21T06:58:31.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建",
            "LaTeX"
        ]
    },
    {
        "title": "IDE插件刷LeetCode",
        "uri": "posts/ide插件刷leetcode",
        "content": "IDEA     LeetCode               IDE                             Pycharm      IntelliJ IDEA PhpStorm WebStorm PyCharm RubyMine AppCode CLion GoLand DataGrip Rider MPS Android Studio       Step 1           https   plugins jetbrains com plugin 12132 leetcode editor        leetcode editor 6 4 zip  Step 2         leetcode editor 6 4 zip             pycharm  Step 3                                 URL leetcode com leetcode cn com                       Leetcode        leetcode                                                         markdown       markdown                              LeetCode https   blog csdn net weixin_40849588 article details 96934259             IDEA     LeetCode     https   www bilibili com video BV16A411v71i PyCharm     Markdown            https   www v2ex com t 474649   Markdown Support           markdown",
        "objectID": "posts/ide插件刷leetcode",
        "date": "2020-06-08T07:50:01.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "leetcode"
        ]
    },
    {
        "title": "LaTeX初体验",
        "uri": "posts/latex初体验",
        "content": "LaTeX           LaTeX       TeXworks          TeXworks  XeLaTeX    Liam Huang                             LaTeX          LaTeX      Liam Huang     TeX Live         https   liam page texlive          LaTeX       https   liam page 2014 09 08 latex introduction  Hello World                LaTex  documentclass article            begin document  Hello  world   end document       XeLaTeX                                 documentclass article   begin document                                                                                                          TeXworks              UTF 8         XeLaTeX      LaTex  documentclass UTF8  ctexart   begin document     world   end document                               article    ctexart           UTF8                   LaTeX  documentclass UTF8  ctexart   title    world    author clj   date  today   begin document   maketitle    world   end document                           maketitle                                        LaTeX  documentclass UTF8  ctexart   title    world    author clj   date  today   begin document   maketitle  section     section          subsection Hello Guangdong subsection             subsubsection Hello Shenzhen subsubsection   paragraph Shenzhen paragraph  city  subparagraph Welcome subparagraph  Shenzhen  subsection Hello World subsection   paragraph World  means      end document         article ctexart                             section     subsection     subsubsection     paragraph     subparagraph     report ctexrep     chapter        book ctexbook       part             maketitle           LaTeX  documentclass UTF8  ctexart   title    world    author Liam   date  today   begin document   maketitle  tableofcontents  section     section                            subsection Hello Guangdong subsection             subsubsection Hello Shenzhen subsubsection   paragraph Shenzhen paragraph  city  subparagraph Welcome subparagraph  Shenzhen  end document     LaTeX                              AMS LaTeX                    amsmath     usepackage amsmath        LaTeX                inline         display                                                                            equation       LaTeX  begin equation       end equation                                 _                              e  2 pi i     a_ 123   LaTeX  documentclass article   usepackage amsmath   begin document     z   e  2 pi i        a_ 123    Einstein  s  E mc 2      E mc 2      begin equation  E mc 2   end equation   end document               sqrt         frac                                                                                          dfrac          tfrac   LaTeX  documentclass UTF8  ctexart   usepackage amsmath   begin document    sqrt x      frac 1  2        sqrt x          frac 1  2        dfrac 1  2      d       tfrac 1  2       end document             pm    times     div    cdot    cap    cup    geq    leq    neq    approx     equiv                           sum   prod   lim   int                                 limits    nolimits                     LaTeX  documentclass UTF8  ctexart   usepackage amsmath   begin document      pm    times     div    cdot    cap    cup    geq    leq    neq    approx     equiv       sum i 1  n i quad  prod i 1  n      sum limits  i 1  n i quad  prod limits  i 1  n       lim x to0 x 2  quad  inta b x 2 dx        lim nolimits  x to0 x 2 quad  int nolimitsa b x 2 dx     end document                                  langle rangle                                                   lvert rvert  amsmath         big   Big   bigg   Bigg                           Biggl  biggl  Bigl  bigl  x  bigr  Bigr  biggr  Biggr               dots   cdots   vdots   ddots        dots    cdots                        LaTeX  documentclass UTF8  ctexart   usepackage amsmath   begin document     x1 x2  dots  x_n quad 1 2  cdots  n quad  vdots quad  ddots     end document                                                       Liam Huang            LaTeX                        graphicx        includegraphics            TeX             a jpg                           LaTeX  documentclass article   usepackage graphicx   begin document   includegraphics a jpg   end document            includegraphics width    8 textwidth  a jpg                      80       hline                                                                 l c r          Markdown      LeTeX  documentclass UTF8  ctexart   usepackage amsmath   begin document   begin tabular   l c r    hline                   hline Windows   MikTeX   TexMakerX     hline Unix Linux   teTeX   Kile     hline Mac OS   MacTeX   TeXShop     hline     TeX Live   TeXworks     hline  end tabular   end document                    LaTeX                                                        LaTeX                                   Liam Huang",
        "objectID": "posts/latex初体验",
        "date": "2019-07-31T08:32:27.000Z",
        "categories": [
            "教程-ღ-点评"
        ],
        "tags": [
            "LaTeX"
        ]
    },
    {
        "title": "Leetcode300 最长上升子序列",
        "uri": "posts/leetcode300longest-increasing-subsequence",
        "content": "LeetCode 300 longest increasing subsequence         LeetCode                                   LIS               10 9 2 5 3 7 101 18      4                2 3 7 101        4                   1 3 9 2 4 5                          LIS                                LIS                                                        1  1 1 1 1 3  2 11 3 13 1 3 9  3 11 31 3 9 139 1 3 9 2  3 11 21 3 9 129 1 3 9 2 4  3 11 21 2 4 124 1 3 9 2 4 5 4 11 21 2 41 2 4 5 1245                  i          d i     d 1   1  d 2   1 3  d 3   1 3 9",
        "objectID": "posts/leetcode300longest-increasing-subsequence",
        "date": "2019-07-02T05:21:12.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode354俄罗斯套娃",
        "uri": "posts/leetcode354俄罗斯套娃",
        "content": "w  h                                                                                                                           envelopes     5 4   6 4   6 7   2 3       3              3        2 3      5 4      6 7                                300                                                                   LIS               10 9 2 5 3 7 101 18      4                2 3 7 101        4           1                        dp i  max dp j   1   0 j int  not nums  return 0 dp    1    len nums       1            res   0 range len nums    j range i   nums i    nums j   dp i    max dp i   dp j    1  return max dp         O n 2          O n                                   1       envelopes 0    envelopes 1                      envelopes 0            6 7    7 9    8 8    9 9     envelopes 0          envelopes 0             envelopes 1                      envelopes 0          9  9    1  2    1  3    1  1    1  1                  envelopes 1          9  9    1  3    1  2    1  1    1  1     envelops 0       envelops 1                            1  2    1  3   3  2      1  3      1  2         envelopes 1    9 3 2 1 a  1 b                dp 0    9   1                                                                               dp 1    9  3   2     dp 2    9  2   2     dp 3    9  1 a    2     dp4    9  1 a    envelopes 4   envelops3      2   class Solution  def maxEnvelopes self  envelopes  List List int       int  not envelopes  return 0 envelopes sort key  lambda x   x 0    x 1    dp    1    len envelopes  range len envelopes    j range i   envelopesi   envelopesj  dp i    max dp i   dp j    1  return max dp         O n 2          O n            2                         dp i        i              e  g   10  9  2  5  3  7  21  18    nums   10   9   2   5   3   7   21   18                                                                             tails   10   0   0   0   0   0   0   0     tails   9   0   0   0   0   0   0   0     tails   2   0   0   0   0   0   0   0     tails   2   5   0   0   0   0   0   0     tails   2   3   0   0   0   0   0   0     tails   2   3   7   0   0   0   0   0     tails   2   3   7   21   0   0   0   0     tails   2   3   7   18   0   0   0   0   Dynamic programming   Dichotomy  class Solution  def lengthOfLIS self  nums   int      int  tails  res    0    len nums   0 num nums  i  j   0  res int  not envelopes  return 0 envelopes sort key lambda x  x 0    x 1    res   0 tails    None    len envelopes  x  y envelopes  i  j   0  res   j  mid      j i     2 tails mid    y    mid   1 else  j   mid tails j    y j    res  res    1 return res",
        "objectID": "posts/leetcode354俄罗斯套娃",
        "date": "2021-03-04T03:39:44.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode44 通配符匹配",
        "uri": "posts/leetcode44wildcard-matching",
        "content": "LeetCode 44  leetcode   hard                                                        LeetCode      https   leetcode cn com problems wildcard matching            s           p                                                                                               s            a z         p            a z                        1        s    aa   p    a       false       a        aa             2        s    aa   p             true                          3        s    cb   p     a       false                c         a        b       4        s    adceb   p     a b       true                                         dce                                                                                                        Case 1     s     p         true     null             null 1   Case 2     s  azc p  ab      false     null    z   c                            null 1         1    b      0             Case 3     s  abc p   b       false     null      b                                         null 1         1    b      1  c        1      Case 1   base case s p               1   Case 2 3             s q                                         s i   p j    s i             i p s       Case 2     i                          i             i 1            az   ab    azc      ab            i  i                false   Case 3                Case 3         c                                                   true                   s  abab p   b      true     null       b                                 null 1  1        1  0  b     1  1  1     1  0  1 b     1  1  1    Step 1      null null  1  Step 2     p 0            1                        1           1   Step 3     p 1   b         null     1                                         1  s i   p j  s i           Step 4     p 2                1                           1           1          1                1              1                   1       a       a      null                           null 1        1 1                                1       a       ab         abb      null                           null 1        1 1  b    1 1  b    1 1      2                 1                                                       b   a           b   ab       null      b                                null 1 1       1 0  b    1 1  b    1 1 1                      1                                                   ab          abb    b                 p 1   s 2   b                null      b                                null 1        1 0  b    0 1  b    0 0 1            python3                                            table                  table                                                          python3 class Solution  def isMatch self  s  str  p  str     bool  table      n_row   len s    1 n_column   len p    1 table     None    ncolumn range n_row   table0   True j range len p    table_j   j 1 cur_p   p j   current p          leftcolumn    e tablej 1  e table  cur_p              1         p0         table   has_one   False tablei left enumerate leftcolumn   left    True              1 subi range tablei n_row   has_one   True tablesub_i   True break has_one    False        1    return False else        1           false has_one   False starti left enumerate leftcolumn   left    True start_i                      null       b   c                                                null 1         1  0    b     1  1    b     1  1  0  c         1  d           1",
        "objectID": "posts/leetcode44wildcard-matching",
        "date": "2019-07-01T15:33:47.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode70 爬楼梯",
        "uri": "posts/leetcode70climbing-stairs",
        "content": "LeetCode 70 Climbing Stairs    LeetCode                     N N   0                         1   2                     N 3   3      1    1       3   1  1  1     2   1    2   1  2     3   2    1   2  1   python3           leetcode            1                           n                   1   2              2           a    n 1    b    n 2                     f N    f N 1    f N 2                          N 1         f N 1    f N 1 1    f N 1 2               f n    f n 1    f n 2    python3 class Solution  def climbStairs self  n  int     int  nn    2                         1                                                                 python3 class Solution  n2step    def climbStairs self  n  int     int  n",
        "objectID": "posts/leetcode70climbing-stairs",
        "date": "2019-07-01T14:07:17.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "Leetcode712 两个字符串的最小ASCII删除和",
        "uri": "posts/leetcode712minimum-ascii-delete-sum-for-two-strings",
        "content": "Leetcode 712 Minimum ASCII Delete Sum Two Strings         ASCII          LeetCode                    s1  s2                  ASCII         1      s1    sea   s2    eat      231        sea       s      s     115          eat       t     116                   115   116   231               2      s1    delete   s2    leet      403        delete       dee         let     100 d  101 e  101 e          leet       e    101 e                      let       100 101 101 101   403                  lee     eet        433   417",
        "objectID": "posts/leetcode712minimum-ascii-delete-sum-for-two-strings",
        "date": "2019-07-01T15:17:45.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "Leetcode动态规划几道题",
        "uri": "posts/leetcode动态规划几道题",
        "content": "Leetcode                           leetcode tag                  32                                                                2                                     6                            dp i   i                                           dp 0        2         s i 1   1       2  a         b          c                 dp i  dp i 2  2       a c                                a    dp i 1   0  dp i  0 b    dp i 1   0      s i  dp i 1   1            dp i  dp i 1  2 c    dp i 1   0               dp i  0 class Solution  def longestValidParentheses self  s  str     int  len s   0 s i dp i 1  1          dp i    dp i 1    2 i dp i 1  2    0     python               dp  1  0 dp i     dp i dp i 1  2  result   max result  dp i   else  dp i    0 return result 72      p s                                                                                    class Solution  def minDistance self  word1  str  word2  str     int  m n   len word1   len word2  dp     0   n 1  _ range m 1   range m   dpi 1   i 1 j range n   dp0   j 1 range m   j range n   word1 i     word2 j   dpi 1   dpi else  dpi 1   min dpi 1  dpi  dpi    1 return dpm 85      120                           dp i    j     tri  i    j     min  dp  i 1    j     dp  i 1                          tri  m 1    0    tri  i    j      tri   i 1    j      1 dp  2    0   triangle   3    0                                                                                                                              2 dp  1    0   triangle   2    0     3 dp  1    1   triangle   2    1         4 dp  0    0   triangle   1    0     5 dp  0    1   triangle   1    1     6 dp  0    2   triangle   1    2     class Solution  def minimumTotal self  triangle  List List int       int  m n   len triangle   len triangle  1     m n  dp     0  n _ range m   range n   dp0   triangle 1 range 1 m   j range len triangle  i 1     dpi   triangle i 1   min dpi 1  dpi 1  return dpm 1            O m n    dp                O n  n                   m n       O m   class Solution  def minimumTotal self  triangle  List List int       int  n   len triangle  dp   0  n range n   dpi    triangle  1 range 1 n   j range len triangle  i 1     dpj    triangle  i 1   min dp j   dp j 1   return dp 0  139                s              wordDict    s                                    dp i     i                           dp i    dp i              i         1    i                       i word_size           is son song      s   s   o   n   g     s                                                                   False   True   False   False   True   True   False   True   class Solution  def wordBreak self  s  str  wordDict  List str      bool  size   len s  dp    False    size range size   word wordDict  word_size   len word  s i wordsize 1  i 1     word  dp i wordsize  True i word_size int  res   nums 0  dp1   max 0  nums 0   dp2   min 0  nums 0   range 1  len nums    nums i     0  dp1 dp2   0 0 elif nums i    0  dp1   max dp1 nums i   nums i     dp1   0   0 nums i  dp2    nums i          else  tmp   dp1 dp1   dp2   nums i  dp2   min tmp   nums i   nums i   print dp1 dp2  res   max res  dp1  return res",
        "objectID": "posts/leetcode动态规划几道题",
        "date": "2020-10-06T12:05:17.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode动态规划简单题",
        "uri": "posts/leetcode动态规划简单题",
        "content": "100                    53 121 198         53                nums                                                   f i    i                                 f i     i                               class Solution  def maxSubArray self  nums  List int      int    nums 0  result   nums 0  range 1  len nums      max a nums i   nums i   result   max result  a  return result 121                                                                                                                           i      class Solution  def maxProfit self  prices  List int      int  len prices  int  len nums     0  return 0 elif len nums     1  return nums 0  a b   nums 0   max nums 0  nums 1   range 2  len nums    tmp   b b   max a nums i   b    tmp return b 62                m x n                    Start                                             Finish                     dp    dpi   dpi 1   dpi        i j                                class Solution  def uniquePaths self  m  int  n  int     int  dp     1    n      1   0   n 1  _ range m 1   range 1 m   j range 1 n   dpi   dpi   dpi 1 return dp 1            O m n               O n         class Solution  def uniquePaths self  m  int  n  int     int  dp    1  n range 1  m   j range 1  n   dp j    dp j 1    dp j  return dp  1                  C_ m n 2   m 1    63       II           m x n                    Start                                             Finish                                          class Solution  def uniquePathsWithObstacles self  obstacleGrid  List List int       int  m  n   len obstacleGrid   len obstacleGrid 0   dp     0    n _ range m   range m   obstacleGridi    0  dpi   1 else  break range n   print dp  obstacleGrid0    0  dp0   1 else  break range 1  m   j range 1  n   obstacleGridi    1  continue else  dpi   dpi 1   dpi return dp 1        O n 1   class Solution  def uniquePathsWithObstacles self  obstacleGrid  List List int       int  m  n   len obstacleGrid   len obstacleGrid 0   dp    0     n 1  dp 1    1 range m   j range n   print dp  obstacleGridi    1  dp j 1    0 else  dp j 1    dp j 1    dp j  return dp  1                0 1 0 0   dp          0    dp               0   dp 0            m      0   1   0   0                                    0    0   0   0      0    1   1   0      0    0   0   0   64                   m x n                                                 class Solution  def minPathSum self  grid  List List int       int  m  n   len grid   len grid 0   dp    float  inf     n 1  dp 1    0 range m   j range n   dpj 1    min dp j 1   dp j     grid i print dp  return dp  1        O n 1   62                     inf                                    1 3 1   1 5 1   4 2 1                        inf       inf    inf   0   inf   inf                                     inf    1   3   1      inf    1   5   1      inf    4   2   1         dp  class Solution  def minPathSum self  grid  List List int       int  m  n   len grid   len grid 0   range m   j range n   i  0 j  0  continue    0  gridi   gridi gridi elif j    0  gridi   gridi 1 gridi else  gridi   min gridi 1  gridi    gridi return grid 1       O 1               91             0      4                    s i  0  2 26    0  return 0 e g  100 190 s i   0      10      26  dp i  dp i 1  dp i 2  e g  123 111 s i   0      10       0       10     26  dp i  dp i 1  e g  109 199    class Solution  def numDecodings self  s  str     int  s 0      0   return 0 len s     1  return 1 s 1      0   int s  2   10 two_ss end    None  Definition binary tree node  class TreeNode  def init self  val 0  left None  right None   self val   val self left   left self right   right class Solution  def generateTrees self  n  int     List TreeNode   def generateTrees start  end   start   end  return  None    allTrees      range start  end 1                          leftTrees   generateTrees start  i 1               rightTrees   generateTrees i 1  end                                        l leftTrees  r rightTrees  currTree   TreeNode i  currTree left   l currTree right   r allTrees append currTree  return allTrees return generateTrees 1  n  n else    96                 n    1     n                                                      1 2 3 4    1       dp 0  dp 3      null      2 3 4   2       dp 1  dp 2       1       3 4   3       dp 2  dp 1       1 2       4   4       dp 3  dp 0       1 2 3      null   dp n     sum_ i 0   n 1 dp i  dp n i 1   p s              O n       O 1                  dp 0  1 dp 1  1                                                    self n2result                               class Solution  def init self   self n2result      def numTrees self  n  int     int  n int  store    1  1    dp 0  dp 1  n",
        "objectID": "posts/leetcode动态规划简单题",
        "date": "2020-09-17T06:22:15.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode链表题",
        "uri": "posts/leetcode链表",
        "content": "leetcode                                                    141                                                                      None  class Solution  def hasCycle self  head  ListNode     bool  not head not head next  return False slow   head fast   head next slow    fast  not fast not fast next  return False slow   slow next fast   fast next next return True class Solution  def hasCycle self  head  ListNode     bool  not head head next None  return False fast  slow   head  head True  not fast not fast next  return False fast   fast next next slow   slow next slow fast  return True 142      II   a       b           a 1 b 3    a nb             3         2                           head        slow fast         nb      a        f        s  f 2s     b                       n       f s nb          s nb        a        a            p  head   p a         a             p             class Solution  def detectCycle self  head  ListNode     ListNode  fast  slow   head  head True  not fast not fast next  return None fast   fast next next slow   slow next fast slow        break p   head p not slow  p   p next slow   slow next return p 160                 set            class Solution  def getIntersectionNode self  headA  ListNode  headB  ListNode     ListNode  s   set   p   headA p  s add p  p   p next p   headB p  p s  return p else  p   p next return None           O 1                                                    class Solution  def getIntersectionNode self  headA  ListNode  headB  ListNode     ListNode  p  q   headA  headB p  q  p None  p   headB          A      B    q   q next elif q None  q   headA p   p next else  p   p next q   q next return p                      list       206      class Solution  def reverseList self  head  ListNode     ListNode  not head head next None  return head a b   head  head next head next   None b  c   b next b next     b b   c return 203                   val        class Solution  def removeElements self  head  ListNode  val  int     ListNode  p   head p  p val    val  break p   p next not p  return None res   p pre   p post   p next post  post val    val  pre   pre next else  pre next   post next post   post next return res               class Solution  def removeElements self  head  ListNode  val  int     ListNode  dummy   ListNode None  dummy next   head a  b   dummy  head b  b val    val  a next   b next else    a next b   b next return dummy next 328                                                                                            2  1  3  5  6  4  7  NULL     2  3  6  7  1  5  4  NULL class Solution  def oddEvenList self  head  ListNode     ListNode  not head not head next  return head a  b   head  head next   a      b      even_start   b                      b b next  a next   b next b next   b next next   a next        a next    a next next b   b next a next   even_start return head 234                       True False  class Solution  def get_mid self  head   dummy   ListNode None  dummy next   head slow  fast   dummy  dummy fast fast next  slow   slow next fast   fast next next return slow def reverse self  head   not head not head next  return head a b   head  head next head next   None b  tmp   b next b next     b b   tmp return def isPalindrome self  head  ListNode     bool  1                              mid   self get_mid head  2    mid           mid  mid next   self reverse mid next  3         p   head q   mid next q  p val    q val  return False else  p   p next q   q next return True",
        "objectID": "posts/leetcode链表",
        "date": "2020-10-13T12:05:17.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "链表"
        ]
    },
    {
        "title": "Leetcode买卖股票题",
        "uri": "posts/leetcode买卖股票题",
        "content": "leetcode                         121                                                                                                                                                  i   123           III  121           2                                          131419      2 3 8            3 8           132719        2 5 8        13      1 7         6 8 14                     dpn  n     4  4        dp1i        dp2i        dp3i        dp4i                                             dpi   max dpi 1   prices i                                 dpi   max dpi 1  dpi 1 prices i                                         dpi   max dpi 1  dpi  prices i                                 dpi   max dpi 1  dpi 1 prices i   132719                                        day1   day2   day3   day4   day5   day6                                                                    1   3   2   7   1   9             1    1    1    1    1    1            0   2   2   6   6   8             1    1   0   0   5   5            0   2   2   2   2   14   class Solution  def maxProfit self  prices  List int      int  len prices  int  len prices  int  len prices  days  2  dp0  dp1   0   prices 0  range 1  days   dp0   max dp0  dp1 prices i   dp1   max dp1  dp0 prices i   return max dp0  dp1  dp    0    k 2 range k 2   i 2    0  dp i      prices 0  range 1  days   dp 1    max dp 1   dp 0    prices i   dp 0    max dp 0   0   prices i   dp 3    max dp 3   dp 2    prices i   dp 2    max dp 2   dp 1    prices i   dp 4    max dp 4   dp 3  prices i   dp 3    max dp 3   dp 2  prices i   j range k 1   dp 2j 3    max dp 2j 3   dp 2 j 2    prices i   dp 2j 2    max dp 2j 2   dp 2 j 1    prices i   print dp  return max dp",
        "objectID": "posts/leetcode买卖股票题",
        "date": "2020-09-30T12:02:56.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode",
            "动态规划"
        ]
    },
    {
        "title": "Leetcode数组和字符串",
        "uri": "posts/leetcode数组和字符串",
        "content": "leetocde                                                                                1     nums    1  7  3  6  5  6     3       3  nums 3    6          1   7   3   11          5   6   11         3                 class Solution object   def pivotIndex self  nums   S   sum nums  leftsum   0 i  x enumerate nums   leftsum     S   leftsum   x   return leftsum    x return  1                leftsum  S nums i  leftsum                                                                                         1 3 5 6   5     2       for         O n                        O logN               def lower_bound array  first  last  value   first int  first  last  0  len nums  first None  n   len matrix       range n    2   j range n   matrixi  matrixn     1   matrixn     1  matrixi        range n   j range i   matrixi  matrixj   matrixj  matrixi             M   N        0                             set                                           2 set   2                                                                 M x N        M   N                                           2                      m n 1   class Solution  def findDiagonalOrder self  matrix  List List int       List int   not matrix  return    m n   len matrix   len matrix 0   res      ii range m n 1   ii 2    0         ii   0 j   0  res append matrixi     1 j    1 return res                      s    s                s        1000     1       babad       bab       aba               2       cbbd       bb                                    class Solution  def longestPalindrome self  s  str     str  size   len s  size   evenlen else palindromeeven len curmaxsub    max_len  maxlen   len curmax_sub  res   curmaxsub return res def _centerspread self  s  size  left  right       left   right                           right   left   1                                 left j   right    0 j int  range len haystack  len needle  1   match   True j range len needle    needle j     haystack i j   match   False break match  return return  1           KMP                     KMP                                          ABBAB         AB            1                                                  1                                 1   A                                         1   AB                                         2   ABA        A                                3   ABAB        AB                                4   ABABA        ABA                      n                 n 1                                   1                          ABABABC     ABABC               A               B     B     B   C                                                              B     B   C                                           5            1      next      A           B     B     B   C                                                                                                                                 B     B   C   int match  char  P  char  S      KMP    int  next   buildNext P         next   int m    int  strlen  S     0           int n    int  strlen P   j   0           j j    S i     P j            P         i    j                else j   next j                        delete    next        next   return   j    int  buildNext char  P             P   next   size_t m   strlen P   j   0            int  N   new int m      next   int t   N 0     1            j t    P j     P t          j    t    N j    t            N j     P j     P t    t   N t     else       t   N t   return N          1                        II                    O n 2                       O n                           O 1       O n      class Solution  def twoSum self  numbers  List int   target  int     List int   i  j   0  len numbers    1 List int   low  high   0  len numbers    1 low int    0 cur_len   len nums  int    0 b   0 int  cur_len   len nums    0 int  res   0 count   0 range len nums    nums i     1  count    1 res   max res  count  else  count   0 return res                      1                          0  class Solution  def findMaxConsecutiveOnes self  nums  List int      int     1 res   0 nums   0  j range len nums    nums j     1  continue else  res   max res  j     1    j                nums j     1  res   max res  j   i  return res                 n               s               s                                       0        s   7  nums    2 3 1 2 4 3     2         4 3                                  O n               O nlogn                  class Solution  def minSubArrayLen self  s  int  nums  List int      int  i  j  0  0 res   len nums    1 tmp_sum   0 j   s  res   min j     1  res  tmp_sum    nums i     1 j    1 res    len nums    1  return 0 else  return res",
        "objectID": "posts/leetcode数组和字符串",
        "date": "2020-11-02T07:04:35.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "每日Leetcode01",
        "uri": "posts/leetcodedaily1",
        "content": "LeetCode      array  string  tree  linkedlist  math        189  Rotate Array tag  array Solution    https   leetcode com problems rotate array discuss 54426 Summary of solutions in Python 3 step array rotation  O n  time  O 1  space  python3 class Solution object   def rotate self  nums  k   k None k approach based fact when rotate array k times  k nk elements back end array front rest elements front shift backwards      approach  firstly reverse elements array  Then  reversing first k elements followed reversing rest n kn k elements gives us required result      Let n 7n 7 k 3k 3      Original List   1 2 3 4 5 6 7   reversing numbers   7 6 5 4 3 2 1   reversing first k numbers   5 6 7 4 3 2 1   revering last n k numbers   5 6 7 1 2 3 4     Result 67  Add Binary tag  math  string          Solution    https   leetcode com problems add binary discuss 359628 python3 solutioneasy to understand  python3 class Solution  def addBinary self  a  str  b  str     str                           ans      a_index   len a    1 b_index   len b    1      carry   0 aindex    0 bindex    0  p q                      0   p   int a aindex   aindex    0 else 0 q   int b bindex   bindex    0 else 0 a_index    1 b_index    1         sum   p   q   carry             ans   str sum   2    ans       carry   sum    2           1            1 return  1    ans carry    1 else ans   58  Length Last Word tag  string      word                Solution  python3 class Solution  def lengthOfLastWord self  s  str     int  last_space   True lenwithoutspace   len s  range len s  0  1       s           ab     2  last_space  s i 1          lenwithoutspace    1 continue else  last_space   False s i 1          return lenwithoutspace   return lenwithoutspace   Runtime  32 ms  faster 90 14  Python3 online submissions Length Last Word  Memory Usage  14 MB  less 5 26  Python3 online submissions Length Last Word  Discussion  python solution     split            cheat      interview            Solution   https   leetcode com problems length of last word discuss 21901 One line Python solution  python3 def lengthOfLastWord self  s   return len s rstrip      split       1     21  Merge Two Sorted Lists tag  linkedlist                                      The new list made splicing together nodes first two lists  Solution    https   leetcode com problems merge two sorted lists discuss 9735 Python solutions  iteratively recursively iteratively in place    python3 Definition singly linked list  class ListNode  def init self  x   self val   x self next   None iteratively def mergeTwoLists1 self  l1  l2   cur             list tail dummy   cur   ListNode 0  l1 l2  l1 val next  100  Tree tag  tree           Solution    https   leetcode com problems same tree discuss 32729 Shortest 2Bsimplest Python  python3 def isSameTree self  p  q   p q  return p val    q val self isSameTree p left  q left  self isSameTree p right  q right  return p q                              trick  and is     p q   True p  None q  None else False          None  True           Time complexity   O N   N number nodes tree  one visits node exactly once  Space complexity  O log N   best case completely balanced tree O N  worst case completely unbalanced tree  keep recursion stack   python3 class Solution  def isSameTree self  p  q        type p  TreeNode  type q  TreeNode  rtype  bool     p q None not p not q  return True one p q None not q not p  return False p val    q val  return False return self isSameTree p right  q right    self isSameTree p left  q left    Solution    https   leetcode com problems same tree solution  Iteration    python3 collections import deque class Solution  def isSameTree self  p  q        type p  TreeNode  type q  TreeNode  rtype  bool     def check p  q   None not p not q  return True one p q None not q not p  return False p val    q val  return False return True deq   deque   p  q     deq  p  q   deq popleft   not check p  q   return False p  deq append  p left  q left   deq append  p right  q right   return True   deque double end queue           list      deque                list      pop     insert           O n  deque    pop     append         O 1       https   zhuanlan zhihu com p 37093602",
        "objectID": "posts/leetcodedaily1",
        "date": "2019-08-19T08:16:22.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "每日Leetcode02",
        "uri": "posts/leetcodedaily2",
        "content": "35  Search Insert Position tags  Array               index  You may assume no duplicates array  Example 1   AppleScript Input   1 3 5 6   5 Output  2     Solution   python3 class Solution  def searchInsert self  nums  List int   target  int     int  range len nums    nums i   target  return return len nums    Runtime  64 ms  faster 22 39  Python3 online submissions Search Insert Position  Memory Usage  14 3 MB  less 5 97  Python3 online submissions Search Insert Position                 O N            Solution    https   leetcode com problems search insert position discuss 15306 6 line Python solution similar to 34 Search for a Range 44ms   binary search         O log N    python3 def searchInsert self  nums  target   left  right   0  len nums    1 left nums mid   left   mid   1 else  right   mid   1 return left   Runtime  56 ms  faster 86 79  Python3 online submissions Search Insert Position  Memory Usage  14 2 MB  less 5 97  Python3 online submissions Search Insert Position  268  Missing Number tag  math      n       0 n                 O N         O 1   Example 1   markdown Input   3 0 1  Output  2          python3 class Solution  def missingNumber self  nums  List int      int  total_sum   sum range len nums  1   return total_sum   sum nums    Solution    https   leetcode com problems missing number solution   python3 class Solution  def missingNumber self  nums   expected_sum   len nums   len nums  1   2                           sum         O 1  actual_sum   sum nums              O N  return expectedsum   actualsum        Bit Manipulation   XOR        Index   0   1   2   3                                           Value   0   1   3   4   missing 4  0 0   1 1   2 3   3 4    4 4   0 0   1 1   3 3  2  0 0 0 0 2 2  python3 class Solution  def missingNumber self  nums   missing   len nums  i  num enumerate nums   missing      num return missing     python                https   blog csdn net xtj332 article details 6639009                                           2 5      10 101 111    111         7    1 1      1 1 0       1 1 10            0     3 4        3    11111101 4    100    00000100  11111101 00000100 11111101   11111101      1000111       7  XOR           XOR     0 0     N       N  344  Reverse String tag  String           inplace         python3 class Solution  def reverseString self  s  List str      None      not return anything  modify s in place instead      range len s   2   s i  s  i 1    s  i 1  s i    p s        python    return s    1  19  Remove Nth Node End List tag  linkedlist Given linked list  remove n th node end list return its head        N    Given n will always valid   Example   markdown Given linked list  1  2  3  4  5  n   2  removing second node end  linked list becomes 1  2  3  5      Solution   python3 class Solution  def removeNthFromEnd self  head  ListNode  n  int     ListNode   if head next None  return None a b   head head _ range n   b   b next b None           head   head next return head b next not None    a next b   b next a next   a next next return head   101  Symmetric Tree tag  tree             markdown 1     2 2         3 4 4 3   Solution    https   leetcode com problems symmetric tree discuss 33050 Recursively and iteratively solution in Python Iterative    python3 class Solution  def isSymmetric self  root   not root  return True stack     root left  root right   stack  cur   stack pop   l  r   cur 0   cur 1  not l not r  continue not l r not r l l val    r val  return False stack append  l right  r left   stack append  l left  r right   return True",
        "objectID": "posts/leetcodedaily2",
        "date": "2019-08-21T11:34:02.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "每日Leetcode03",
        "uri": "posts/leetcodedaily3",
        "content": "39  Combination Sum tag  array Given set candidate numbers  candidates   without duplicates  target number  target   find unique combinations candidates candidate numbers sums target  repeated number may chosen candidates unlimited number times  Example 1   html Input  candidates    2 3 6 7   target   7  solution set is     7    2 2 3      Solution   https   leetcode cn com problems combination sum solution xue yi tao zou tian xia hui su suan fa by powcai   python3 class Solution  def combinationSum self  candidates  List int   target  int     List List int                                        1              2                     candidates sort   n   len candidates  res      def backtrack i  tmp_sum  tmp   tmp_sum   target    n  return tmp_sum    target  res append tmp  return j range i  n   tmp_sum   candidates j    target  break backtrack j tmp_sum   candidates j  tmp  candidates j    backtrack 0  0      return res    powcai    https   leetcode cn com problems combination sum solution xue yi tao zou tian xia hui su suan fa by powcai        LeetCode            https   leetcode cn com problems combination sum solution hui su suan fa jian zhi python dai ma java dai m 2        candidates    2  3  6  7  target   7          7    2  2  3                                                                             python3 class Solution  def combinationSum self  candidates  List int   target  int     List List int    size   len candidates  size    0  return                                        1              2                     candidates sort                         path      res            size    range    size     self __dfs candidates  0  size  path  res  target  return res def __dfs self  candidates  begin  size  path  res  target             target    0  Python                    path              path copy   res append path     index range begin  size   residue   target   candidates index                                  residue          Given collection candidate numbers  candidates  target number  target   find unique combinations candidates candidate numbers sums target  number candidates may used once combination  Note  numbers  including target  will positive integers  solution set not contain duplicate combinations  Example 1   html Input  candidates    10 1 2 7 6 1 5   target   8  solution set is     1  7    1  2  5    2  6    1  1  6              39           candidates             python3 class Solution  def combinationSum2 self  candidates  List int   target  int     List List int    size   len candidates  size    0  return    candidates sort   res      self __dfs candidates  size  0      target  res  return res def __dfs self  candidates  size  start  path  residue  res   residue    0  res append path     return index range start  size   candidates index    residue  break              index   start candidates index   1     candidates index    1  1  2  5  6  7  10  0      1      6        1       1      5         6                            continue path append candidates index         index   1                  index   1                     self __dfs candidates  size  index   1  path  residue   candidates index   res  path pop      liweiwei1419    https   leetcode cn com problems combination sum ii solution hui su suan fa jian zhi python dai ma java dai m 3    202  Happy Number tag  Math        Write algorithm determine number  happy   happy number number defined following process  Starting positive integer  replace number sum squares its digits  repeat process until number equals 1  where will stay   loops endlessly cycle does not include 1  numbers process ends 1 happy numbers  Example  Input  19 Output  true Explanation     1 2   9 2   82   8 2   2 2   68   6 2   8 2   100   1 2   0 2   0 2   1        Solution   python3 class Solution  def isHappy self  n  int     bool  cur   str n  True  tmp   0 range len cur    tmp  int cur i    2 tmp    1  return True elif tmp    4 tmp    3  return False else  cur   str tmp                        Happy number    1     Happy number          3 4                                                     Happy number        python3 class Solution  def isHappy self  n  int     bool  seen    1  n not seen  seen add n  n   sum int i     2 str n   return n    1    https   leetcode cn com problems happy number solution python 1xing by knifezhu 9",
        "objectID": "posts/leetcodedaily3",
        "date": "2019-08-24T10:48:25.000Z",
        "categories": [
            "算法"
        ],
        "tags": [
            "算法",
            "leetcode"
        ]
    },
    {
        "title": "Markdown插入图片音视频",
        "uri": "posts/markdown插入图音视频",
        "content": "markdown             markdown    markdown                                                                                                      text          text            LeaveIt                                  alt                 align         center   src           svg                              svg  data image png base64 iVBOR                   p s   jpg png   SVG            b    Step 1    b                                  Step 2               src  Step 3                                                                                                                          music 163 com   outchain 2 1374051000 m use        Step 1     PC                                           http   music 163 com m song id 1374051000 userid xxxxxxxxx                   http   music 163 com song 1374051000 userid xxxxxxxxx   Step 2   id            id 1374051000     userid         id                music 163 com outchain player type 2 id 1374051000 auto 1 height 66                  auto 1  auto 0                                                               CSS JS                         HTML iframe                      b  qq",
        "objectID": "posts/markdown插入图音视频",
        "date": "2019-07-13T08:30:13.000Z",
        "categories": [
            "博客"
        ],
        "tags": [
            "博客搭建"
        ],
        "author": "草祭"
    },
    {
        "title": "Python全局锁(GIL)",
        "uri": "posts/python全局锁",
        "content": "threading                         python      GIL  global interpreter lock                          python import threading import random import math import time def printruntime func   def wrapper args   kw   begin_time   time time   ret   func args   kw  end_time   time time   runtime   endtime   begin_time print  Run time  run_time  return ret return wrapper  printruntime def run    sample_count   10000000       inner   0           0        dataset xiaoaiKWS G code  python3         py     multi         3 140688     Run time 83 02815461158752     3 1416188     Run time 85 89040064811707     3 1412312     Run time 86 34525346755981     3 14129     Run time 88 51046800613403     3 1419212     Run time 88 64371156692505     Run time 88 65449285507202     single     3 1421216     Run time 10 199804782867432     3 1420676     Run time 10 172762870788574     3 1419712     Run time 10 3925302028656     3 1417784     Run time 10 204853534698486     3 1416324     Run time 10 210267305374146     Run time 51 180365800857544                     cpu            IO         GIL     http   cenalulu github io python gil in python  https   zhuanlan zhihu com p 20953544     GIL GIL                mutex                                       MySQL          python                         GIL                        GIL      python2 x  GIL            IO    ticks    100 ticks     python              GIL                  sys setcheckinterval             python3 x  GIL   ticks                           GIL     CPU                 GIL                                       CPU                                        GIL                      IO             CPU          IO      CPU      IO                                   IO     IO                        A           B      CPU                   python     IO              python           python multiprocessing                       GIL                                IO             https   juejin im post 5b94e2995188255c5c45d0ec          python3                https   www liaoxuefeng com wiki 1016959663602400 1017628290184064",
        "objectID": "posts/python全局锁",
        "date": "2019-09-20T03:40:17.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "python"
        ]
    },
    {
        "title": "Shell学习",
        "uri": "posts/shell学习",
        "content": "kaldi                shell              shell      https   www runoob com linux linux shell variable html                 shell your_name  cj  echo  your_name echo  Hi   your_name            txt cj Hi cj         1              2           3                                     shell echo ls    grep sh echo   ls    grep sh  echo   pwd        txt learn sh learn sh  home              shell myUrl  http   www google com  readonly myUrl variable  cj  unset variable      1             2  unset                        shell v  variable  s    v  n Hi  echo  e  s join  hi   v echo  join       txt   v  Hi hi variable                                   shell v  variable  s    v  n Hi  echo  e  s join  hi  v  echo  join       txt variable Hi hi variable                    n    n    shell v variable s   v  nHi echo  e  s join  hi   v echo  join       txt variablenHi hi variable                  shell string  abcd  echo    string      4           shell string  runoob great site  echo   string 1 4       unoo           shell string  runoob great site  echo expr index   string  io      4            shell array_name  value0 value1 value2 value3          shell                         shell echo   array_name",
        "objectID": "posts/shell学习",
        "date": "2020-01-10T08:25:48.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "linux"
        ]
    },
    {
        "title": "Tmux学习",
        "uri": "posts/tmux学习",
        "content": "screen      tmux                                 How Use tmux Linux  and Why It s Better Screen        tmux Screen tmux                                       terminal multiplexers                                                                                 screen  tmux    2                    screen                     tmux    screen               tmux       screen                                 Tmux       sudo apt get install tmux     tmux session   tmux       tmux session            status bar      0  session                 session   0 bash  0    session     window   window       bash                window  p s  screen            tmux    Tmux        tmux             Ctrl B  tmux                                    Ctrl B     X         kill pane      y     session     window    pane pane          session              tmux         p s  tmux  Ctrl B   screen Ctrl A                   Tmux        Ctrl A          session     window                mysession session  tmux new  s mysession    session      window    Ctrl B C        current         window     window   top              bash      top      Ctrl B W        window                  Ctrl B      0 9           Detach       Attach  Session   detach  session         session              Attach      session     detach    Ctrl B D attach    tmux attach session  t mysession   t  target mysession session         tmux  t mysession     tmux ls        session          session          session    Ctrl B S         session            window            p s   screen           attached session       screen  D  r    detach   session           session           tmux       attach   session                                 session                                     Ctrl b             Ctrl b             Ctrl b z                        Ctrl b q            tmux       pane       3 pane         Ctrl B X              pane session window pane       session       window   window       pane                       2 session    python      shell      window      pane                                  screen              tmux new  s   session Ctrl B D   session tmux  t     window Ctrl B W     session tmux ls   session   Ctrl B S              window     session tmux rename session  t   Tmux      tmux             screen                https   www jianshu com p fd3bbdba9dc9      touch    tmux conf          Send prefix set option  g prefix C a unbind key C a bind key C a send prefix Use Alt arrow keys switch panes bind  n M Left select pane  L bind  n M Right select pane  R bind  n M Up select pane  U bind  n M Down select pane  D Shift arrow switch windows bind  n S Left previous window bind  n S Right next window Mouse mode set  g mouse Set easier window split keys bind key v split window  h bind key h split window  v Easy config reload bind key r source file    tmux conf    display message  tmux conf reloaded          Send prefix    prefix ctrl b   ctrl a                tmux            Use Alt arrow keys switch panes      prefix    alt    pane  switch                      Shift arrow switch windows      prefix    shift    window  switch           Mouse mode                 window pane     pane            Set easier window split keys               pane  prefix   v       prefix   h                              Easy config reload            tmux conf          tmux    prefix r                     screen vs tmux https   ruby china org topics 4834 Use tmux Linux  and Why It s Better Screen  https   www howtogeek com 671422 how to use tmux on linux and why its better than screen",
        "objectID": "posts/tmux学习",
        "date": "2020-07-18T08:07:38.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "linux"
        ]
    },
    {
        "title": "Ubuntu搭建minecraft服务器",
        "uri": "posts/ubuntu搭建minecraft服务器",
        "content": "b         up    Minecraft                             Minecraft                           5        512MB                       Minecraft                                                              Ubuntu   2G   1 CPU   1M     1 15 2                  2M        2                            mkdir minecraft       minecraft     cd minecraft   minecraft      25565                              wget https   s3 amazonaws com Minecraft Download versions 1 12 2 minecraft_server 1 12 2 jar   minecraft         1 12 2  sudo apt install default jdk   JDK          javac  version        javac           sudo apt get install screen   screen    minecraft          free  m             986M  o      total used free shared buff cache available Mem  1993 215 986 3 790 1601 Swap  947 160 786 java  Xms1024M  Xmx2048M  jar minecraft_server 1 12 2 jar nogui  Xms           Xmx                                     eula txt   linux  03 53 30   Server thread INFO   Starting minecraft server version 1 12 2  03 53 30   Server thread INFO   Loading properties  03 53 30   Server thread WARN   server properties does not exist  03 53 30   Server thread INFO   Generating new properties file  03 53 30   Server thread WARN   Failed load eula txt  03 53 30   Server thread INFO   need agree EULA order run server  Go eula txt info   03 53 30   Server thread INFO   Stopping server  03 53 30   Server Shutdown Thread INFO   Stopping server   sed  i orig  s eula false eula true g  eula txt                                    java  Xms1024M  Xmx2048M  jar minecraft_server 1 12 2 jar nogui   minecraft                04 05 03   Server thread INFO   Done  4 439s   help  type  help                                windows10      HMCL       minecraft                Direct Connect Add Server    ip                     ip                             xxxxxxxxx xxxxxxx id  name xxxxx properties    legacy false    xxxxxxxx 50786  lost connection  Disconnected                              minecraft    server properties    online mode true   online mode false                                minecraft              mincraft                                         screen  S mc     mc session  java  Xms1024M  Xmx2048M  jar minecraft_server 1 12 2 jar nogui       Screen     screen  ls     session             screen  r mc       mc session      ctrl a    d         session                exit       Screen      Linux   shell      screen                  shell                   session     mod Note         1 15 2            1 12 2                 Forge         http   files minecraftforge net        Forge        forge 1 15 2 31 1 0 installer jar   Forge java  jar   forge 1 15 2 31 1 0 installer jar nogui   installServer      jar   minecraft_server 1 15 2 jar                                                                                                forge 1 15 2 31 1 0 jar          java  jar forge 1 15 2 31 1 0 jar                        mod     HMCL                        mod   mod                                      Xaero         jar    minecraft mods        jar   mods                mod          ECS          https   yq aliyun com articles 675070 Ubuntu           https   blog csdn net CSDNzyq article details 52735097 Linux    mod Minecraft    https   www jianshu com p 89f14756d16c Minecraft Forge    https   blog csdn net oschina_41734362 article details 79319399 linux      mod minecraft    https   blog csdn net github_39068149 article details 72910409 243  E5 8A A0 E8 BD BDliteloader         MCBBS https   www mcbbs net portal php",
        "objectID": "posts/ubuntu搭建minecraft服务器",
        "date": "2020-03-12T17:53:35.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "minecraft",
            "linux"
        ]
    },
    {
        "title": "VSCode上安装LaTeX",
        "uri": "posts/vscode上安装latex",
        "content": "latex                               markdown                           ICASSP2020        word                                 word                          TeXworks  WinEdt  latex                                           latex            VSCode LaTeX                                1     texlive Liam Huang         TeX Live             Windows                    http   mirror ctan org systems texlive Images texlive2020 iso          4G texlive2020 iso                          VSCode  LaTeX                             1               python                           2    VSCode  LaTeX          tex               Texlive                       PATH G  texlive 2020 bin win32                                Build Latex project                  View LaTeX PDF    3       VSCode tab             pdf          pdf                                               3    LaTeX   Step 1  Ctrl Shift P        Step 2    Settings JSON       settings json          remote SSH                                                      a  pdf         pdf                SumatraPDF   latex workshop view pdf viewer    external    latex workshop view pdf external viewer command     G  Program Files SumatraPDF SumatraPDF exe    b              tex     pdf             tex   pdf     pdf   tex   latex workshop view pdf external synctex command     G  Program Files SumatraPDF SumatraPDF exe     latex workshop view pdf external synctex args       forward search     TEX      LINE      reuse instance     inverse search    code    C  Program Files Microsoft VS Code resources app out cli js     r  g    f  l       PDF         SyncTex cursor     pdf              pdf          tex    c               Ctrl S                  pdf           markdown                                     latex workshop latex autoBuild run    never                      Springer LNCS LaTeX                                   VSCode                        windows                                          1       be      begin                   2       begin figure           end figure   VSCode                   Spell Right   Word                                          WinEdt                       latex                         TexLive VSCode                                                   VSCode  LaTeX      VSCode  LaTeX LaTeX           LaTeX",
        "objectID": "posts/vscode上安装latex",
        "date": "2020-05-20T09:22:34.000Z",
        "categories": [
            "教程-ღ-点评"
        ],
        "tags": [
            "LaTeX"
        ]
    },
    {
        "title": "声纹识别X-Vector",
        "uri": "posts/x-vector",
        "content": "x vector        baseline     aishell2018 ASVspoof2019   x vector       1   2     1   x vector          2             Prerequisites  TDNN embedding                  Embedding                                                    x vector  Compare pairs embeddings   PLDA  x vector      24 filterbanks   1   20 MFCC    25ms    a  3            b  speech activity detection SAD                             Step 1  Time Delay Neural Networks  TDNN         Statistics Pooling       TDNN    TDNN          3              TDNN           frame5 output 1500      TDNN     15      1500          15     1500             T           T 1500      p s               T                T 2 7       T       T                         p s           dilation        Step 2  Statistics pooling   T               1500         15                                        2x1500 3000              pooling              softmax              K p s   2           N                      K                                 K         N    segment         n      k   d_ n k    1    0   n    loss                       A      B      K                                             Label   0   1   0     Pred   0 3   0 6   0 1       text  loss    0  times  log  0 3  1  times  log  0 6  0  times  log  0 1     Step 3  extract embedding                                                                      embeddings                                                       pooling                pooling           3000                    512              1   segment6     embeddings             2      embedding               embedding     Instead concatenating embeddingstogether wecomputeseparatePLDAbackendsfor embedding  average scores            1           i vector        2       5 20s  dnn     3  embedding         embedding  4  dnn out domain      i vector Step 4  PLDA backend PLDA Probabilistic Linear Discriminant Analysis                  LDA   PLDA          LDA                         embeddings  PLDA      PLDA    i vector                   i      j    xij     xij       x i j   mu F h i  G w i j   epsilon i j                    mu F h_ i                                 G w i j   epsilon i j                               mu              F                             h_i                               G                                 w_ ij                   epsilon_ i j                                                                          X i j   mu F h i   epsilon i j       epsilon  N 0      hi  N 0 1        PLDA                  phi                 EM          E step     M step                                 n1 n2        x vector  i vector                   Hs            Hd    p n1  n2   hs                   p n1   hd  p n2   hd    n1 n2                                                                PLDA             4      i vector   Gaussian PLDA GPLDA           2                                     2      x vector        ivector           out domain Cantonese               data augmentation       EER   data augmentation xvector       PLDA aug   extractor aug                                          1  Snyder D  Garcia Romero D  Povey D  et al  Deep Neural Network Embeddings Text Independent Speaker Verification C   Interspeech  2017  999 1003       2  Snyder D  Garcia Romero D  Sell G  et al  X vectors  Robust dnn embeddings speaker recognition C   2018 IEEE International Conference Acoustics  Speech Signal Processing  ICASSP   IEEE  2018  5329 5333       3  Peddinti V  Povey D  Khudanpur S  time delay neural network architecture efficient modeling long temporal contexts C   Sixteenth Annual Conference International Speech Communication Association  2015       4  Garcia Romero D  Espy Wilson C Y  Analysis i vector length normalization speaker recognition systems C   Twelfth Annual Conference International Speech Communication Association  2011      Embedding    https   towardsdatascience com deep learning 4 embedding layers f9a02d55ac12     Embedding     NLP    https   zhuanlan zhihu com p 34975871     TDNN     https   www jianshu com p 0207536ebc6c           https   blog csdn net tsyccnh article details 79163834     PLDA     1  https   blog csdn net xmujupiter article details 47281211 2  https   blog csdn net shuzfan article details 51672050 3  https   blog csdn net weixin38206214 article details 81115275",
        "objectID": "posts/x-vector",
        "date": "2020-01-02T12:13:20.000Z",
        "categories": [
            "编程-ღ-技术"
        ],
        "tags": [
            "声纹识别",
            "机器学习"
        ]
    }
]