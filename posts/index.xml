<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 草祭</title>
        <link>https://seacj.github.io/posts/</link>
        <description>所有文章 | 草祭</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>swampman@foxmail.com (草祭)</managingEditor>
            <webMaster>swampman@foxmail.com (草祭)</webMaster><lastBuildDate>Thu, 10 Dec 2020 11:06:09 &#43;0800</lastBuildDate><atom:link href="https://seacj.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>回溯算法题</title>
    <link>https://seacj.github.io/posts/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E9%A2%98/</link>
    <pubDate>Thu, 10 Dec 2020 11:06:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95%E9%A2%98/</guid>
    <description><![CDATA[题记 一年半之前写了一篇回溯算法的博客, 不过只是简单的了解了一下,真要写题还是写不出来(过了一年半,不会写的题还是不会写),所以再集中刷一下题]]></description>
</item><item>
    <title>力扣shell题</title>
    <link>https://seacj.github.io/posts/%E5%8A%9B%E6%89%A3shell%E9%A2%98/</link>
    <pubDate>Fri, 27 Nov 2020 15:23:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E5%8A%9B%E6%89%A3shell%E9%A2%98/</guid>
    <description><![CDATA[192. 统计词频 写一个 bash 脚本以统计一个文本文件 words.txt 中每个单词出现的频率。 1 cat words.txt | xargs -n 1 | sort | uniq -c | sort -nr | awk &#39;{print $2, $1}&#39; xargs 分割字符串 -n 1表示每行输出一个 可以]]></description>
</item><item>
    <title>Leetcode数组和字符串</title>
    <link>https://seacj.github.io/posts/leetcode%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Mon, 02 Nov 2020 15:04:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[题记 看到一个说法，面试考数组、字符串题的频率最高，所以来刷一下这类题。这次根据leetocde提供的教程的顺序来学习。 数组简介 寻找数组的中心]]></description>
</item><item>
    <title>Leetcode链表题</title>
    <link>https://seacj.github.io/posts/leetcode%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 13 Oct 2020 20:05:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[题记 这两天刷了十道链表题，打算做个总结，刚好leetcode也提供了一个系统学习的链接，这里做一个小总结。 双指针技巧 链表题里面双指针、快慢指]]></description>
</item><item>
    <title>Leetcode动态规划几道题</title>
    <link>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%87%A0%E9%81%93%E9%A2%98/</link>
    <pubDate>Tue, 06 Oct 2020 20:05:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%87%A0%E9%81%93%E9%A2%98/</guid>
    <description><![CDATA[题记 这一篇是Leetcode动态规划简单题之后的又一个关于动态规划的博客，主要按照leetcode的tag里面写的，可能会不定期更新吧 题目 32]]></description>
</item><item>
    <title>Leetcode买卖股票题</title>
    <link>https://seacj.github.io/posts/leetcode%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E9%A2%98/</link>
    <pubDate>Wed, 30 Sep 2020 20:02:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E9%A2%98/</guid>
    <description><![CDATA[题记 leetcode上刷动态规划有几道股票题，索性就一起刷了。 题目 121 买卖股票的最佳时机 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格]]></description>
</item><item>
    <title>卡塔兰数</title>
    <link>https://seacj.github.io/posts/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0/</link>
    <pubDate>Wed, 23 Sep 2020 15:03:25 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0/</guid>
    <description><![CDATA[题记 卡特兰数（Catalan number）是组合数学中一个常出现在各种计数问题中的数列。 卡塔兰数算是leetcode里面的高频题目了，这里就]]></description>
</item><item>
    <title>Leetcode动态规划简单题</title>
    <link>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%80%E5%8D%95%E9%A2%98/</link>
    <pubDate>Thu, 17 Sep 2020 14:22:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%80%E5%8D%95%E9%A2%98/</guid>
    <description><![CDATA[题记 刷一下动态规划的简单题，一共也没几道。顺便把前100道题里面的中等难度的动态规划题刷了。 第53、121、198是简单题。 题目 53 最大子序和]]></description>
</item><item>
    <title>错排问题</title>
    <link>https://seacj.github.io/posts/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/</link>
    <pubDate>Wed, 16 Sep 2020 13:21:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[题目 题目一. N个人去旅行，在旅店开了N个房间，钥匙挂在大厅的墙上，钥匙上没有标号，每人随手拿一把钥匙，请用程序实现算出所有人都拿错钥匙的可能]]></description>
</item><item>
    <title>C语言傅里叶变换库</title>
    <link>https://seacj.github.io/posts/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/</link>
    <pubDate>Mon, 24 Aug 2020 17:13:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/</guid>
    <description><![CDATA[C语言里面可以用2个库FFTW和kissfft做傅里叶变换，第一次装的时候因为不懂dll、lib怎么用所以配置了很久。 代码的例子如下，由于我]]></description>
</item></channel>
</rss>
