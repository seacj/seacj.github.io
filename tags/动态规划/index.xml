<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>动态规划 - 标签 - 草祭</title>
        <link>https://seacj.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
        <description>动态规划 - 标签 - 草祭</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>swampman@foxmail.com (草祭)</managingEditor>
            <webMaster>swampman@foxmail.com (草祭)</webMaster><lastBuildDate>Tue, 06 Oct 2020 20:05:17 &#43;0800</lastBuildDate><atom:link href="https://seacj.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/" rel="self" type="application/rss+xml" /><item>
    <title>Leetcode动态规划几道题</title>
    <link>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%87%A0%E9%81%93%E9%A2%98/</link>
    <pubDate>Tue, 06 Oct 2020 20:05:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%87%A0%E9%81%93%E9%A2%98/</guid>
    <description><![CDATA[题记 这一篇是Leetcode动态规划简单题之后的又一个关于动态规划的博客，主要按照leetcode的tag里面写的，可能会不定期更新吧 题目 32]]></description>
</item><item>
    <title>Leetcode买卖股票题</title>
    <link>https://seacj.github.io/posts/leetcode%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E9%A2%98/</link>
    <pubDate>Wed, 30 Sep 2020 20:02:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E9%A2%98/</guid>
    <description><![CDATA[题记 leetcode上刷动态规划有几道股票题，索性就一起刷了。 题目 121 买卖股票的最佳时机 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格]]></description>
</item><item>
    <title>Leetcode动态规划简单题</title>
    <link>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%80%E5%8D%95%E9%A2%98/</link>
    <pubDate>Thu, 17 Sep 2020 14:22:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%80%E5%8D%95%E9%A2%98/</guid>
    <description><![CDATA[题记 刷一下动态规划的简单题，一共也没几道。顺便把前100道题里面的中等难度的动态规划题刷了。 第53、121、198是简单题。 题目 53 最大子序和]]></description>
</item><item>
    <title>错排问题</title>
    <link>https://seacj.github.io/posts/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/</link>
    <pubDate>Wed, 16 Sep 2020 13:21:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[题目 题目一. N个人去旅行，在旅店开了N个房间，钥匙挂在大厅的墙上，钥匙上没有标号，每人随手拿一把钥匙，请用程序实现算出所有人都拿错钥匙的可能]]></description>
</item><item>
    <title>Leetcode300 最长上升子序列</title>
    <link>https://seacj.github.io/posts/leetcode300longest-increasing-subsequence/</link>
    <pubDate>Tue, 02 Jul 2019 13:21:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode300longest-increasing-subsequence/</guid>
    <description><![CDATA[LeetCode 300 longest-increasing-subsequence 最长上升子序列 LeetCode试题链接 问题描述： 给定一个无序的整数数组，找到其中最长上升子序列(LIS)的长度。 示例: 输入: [10,9,2,5,3,7,101,18] 输出: 4]]></description>
</item><item>
    <title>动态规划</title>
    <link>https://seacj.github.io/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <pubDate>Tue, 02 Jul 2019 01:27:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
    <description><![CDATA[动态规划总结篇 dynamic programming, DP 什么是动态规划？ 一句话解释：大事化小，小事化了 简单的解释：想办法将一个复杂的大问题拆成几个子问题，分别求解这些子问题，从]]></description>
</item><item>
    <title>Leetcode44 通配符匹配</title>
    <link>https://seacj.github.io/posts/leetcode44wildcard-matching/</link>
    <pubDate>Mon, 01 Jul 2019 23:33:47 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://seacj.github.io/posts/leetcode44wildcard-matching/</guid>
    <description><![CDATA[LeetCode第44题是leetcode难度为hard的一个，解题方法是使用动态规划。题目内容可点击下面的黑色三角展开题目详情。 点击展开题]]></description>
</item></channel>
</rss>
